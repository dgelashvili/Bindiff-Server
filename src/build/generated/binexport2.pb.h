// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: binexport2.proto
// Protobuf C++ Version: 6.30.0

#ifndef binexport2_2eproto_2epb_2eh
#define binexport2_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_binexport2_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_binexport2_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_binexport2_2eproto;
}  // extern "C"
enum BinExport2_CallGraph_Vertex_Type : int;
extern const uint32_t BinExport2_CallGraph_Vertex_Type_internal_data_[];
enum BinExport2_Comment_Type : int;
extern const uint32_t BinExport2_Comment_Type_internal_data_[];
enum BinExport2_Expression_Type : int;
extern const uint32_t BinExport2_Expression_Type_internal_data_[];
enum BinExport2_FlowGraph_Edge_Type : int;
extern const uint32_t BinExport2_FlowGraph_Edge_Type_internal_data_[];
class BinExport2;
struct BinExport2DefaultTypeInternal;
extern BinExport2DefaultTypeInternal _BinExport2_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_class_data_;
class BinExport2_BasicBlock;
struct BinExport2_BasicBlockDefaultTypeInternal;
extern BinExport2_BasicBlockDefaultTypeInternal _BinExport2_BasicBlock_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_BasicBlock_class_data_;
class BinExport2_BasicBlock_IndexRange;
struct BinExport2_BasicBlock_IndexRangeDefaultTypeInternal;
extern BinExport2_BasicBlock_IndexRangeDefaultTypeInternal _BinExport2_BasicBlock_IndexRange_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_BasicBlock_IndexRange_class_data_;
class BinExport2_CallGraph;
struct BinExport2_CallGraphDefaultTypeInternal;
extern BinExport2_CallGraphDefaultTypeInternal _BinExport2_CallGraph_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_CallGraph_class_data_;
class BinExport2_CallGraph_Edge;
struct BinExport2_CallGraph_EdgeDefaultTypeInternal;
extern BinExport2_CallGraph_EdgeDefaultTypeInternal _BinExport2_CallGraph_Edge_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_CallGraph_Edge_class_data_;
class BinExport2_CallGraph_Vertex;
struct BinExport2_CallGraph_VertexDefaultTypeInternal;
extern BinExport2_CallGraph_VertexDefaultTypeInternal _BinExport2_CallGraph_Vertex_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_CallGraph_Vertex_class_data_;
class BinExport2_Comment;
struct BinExport2_CommentDefaultTypeInternal;
extern BinExport2_CommentDefaultTypeInternal _BinExport2_Comment_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Comment_class_data_;
class BinExport2_DataReference;
struct BinExport2_DataReferenceDefaultTypeInternal;
extern BinExport2_DataReferenceDefaultTypeInternal _BinExport2_DataReference_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_DataReference_class_data_;
class BinExport2_Expression;
struct BinExport2_ExpressionDefaultTypeInternal;
extern BinExport2_ExpressionDefaultTypeInternal _BinExport2_Expression_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Expression_class_data_;
class BinExport2_FlowGraph;
struct BinExport2_FlowGraphDefaultTypeInternal;
extern BinExport2_FlowGraphDefaultTypeInternal _BinExport2_FlowGraph_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_FlowGraph_class_data_;
class BinExport2_FlowGraph_Edge;
struct BinExport2_FlowGraph_EdgeDefaultTypeInternal;
extern BinExport2_FlowGraph_EdgeDefaultTypeInternal _BinExport2_FlowGraph_Edge_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_FlowGraph_Edge_class_data_;
class BinExport2_Instruction;
struct BinExport2_InstructionDefaultTypeInternal;
extern BinExport2_InstructionDefaultTypeInternal _BinExport2_Instruction_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Instruction_class_data_;
class BinExport2_Library;
struct BinExport2_LibraryDefaultTypeInternal;
extern BinExport2_LibraryDefaultTypeInternal _BinExport2_Library_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Library_class_data_;
class BinExport2_Meta;
struct BinExport2_MetaDefaultTypeInternal;
extern BinExport2_MetaDefaultTypeInternal _BinExport2_Meta_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Meta_class_data_;
class BinExport2_Mnemonic;
struct BinExport2_MnemonicDefaultTypeInternal;
extern BinExport2_MnemonicDefaultTypeInternal _BinExport2_Mnemonic_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Mnemonic_class_data_;
class BinExport2_Module;
struct BinExport2_ModuleDefaultTypeInternal;
extern BinExport2_ModuleDefaultTypeInternal _BinExport2_Module_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Module_class_data_;
class BinExport2_Operand;
struct BinExport2_OperandDefaultTypeInternal;
extern BinExport2_OperandDefaultTypeInternal _BinExport2_Operand_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Operand_class_data_;
class BinExport2_Reference;
struct BinExport2_ReferenceDefaultTypeInternal;
extern BinExport2_ReferenceDefaultTypeInternal _BinExport2_Reference_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Reference_class_data_;
class BinExport2_Section;
struct BinExport2_SectionDefaultTypeInternal;
extern BinExport2_SectionDefaultTypeInternal _BinExport2_Section_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BinExport2_Section_class_data_;
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::BinExport2_CallGraph_Vertex_Type_internal_data_>
    internal::EnumTraitsImpl::value<::BinExport2_CallGraph_Vertex_Type>;
template <>
internal::EnumTraitsT<::BinExport2_Comment_Type_internal_data_>
    internal::EnumTraitsImpl::value<::BinExport2_Comment_Type>;
template <>
internal::EnumTraitsT<::BinExport2_Expression_Type_internal_data_>
    internal::EnumTraitsImpl::value<::BinExport2_Expression_Type>;
template <>
internal::EnumTraitsT<::BinExport2_FlowGraph_Edge_Type_internal_data_>
    internal::EnumTraitsImpl::value<::BinExport2_FlowGraph_Edge_Type>;
}  // namespace protobuf
}  // namespace google

enum BinExport2_CallGraph_Vertex_Type : int {
  BinExport2_CallGraph_Vertex_Type_NORMAL = 0,
  BinExport2_CallGraph_Vertex_Type_LIBRARY = 1,
  BinExport2_CallGraph_Vertex_Type_IMPORTED = 2,
  BinExport2_CallGraph_Vertex_Type_THUNK = 3,
  BinExport2_CallGraph_Vertex_Type_INVALID = 4,
};

extern const uint32_t BinExport2_CallGraph_Vertex_Type_internal_data_[];
inline constexpr BinExport2_CallGraph_Vertex_Type BinExport2_CallGraph_Vertex_Type_Type_MIN =
    static_cast<BinExport2_CallGraph_Vertex_Type>(0);
inline constexpr BinExport2_CallGraph_Vertex_Type BinExport2_CallGraph_Vertex_Type_Type_MAX =
    static_cast<BinExport2_CallGraph_Vertex_Type>(4);
inline bool BinExport2_CallGraph_Vertex_Type_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int BinExport2_CallGraph_Vertex_Type_Type_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BinExport2_CallGraph_Vertex_Type_descriptor();
template <typename T>
const std::string& BinExport2_CallGraph_Vertex_Type_Name(T value) {
  static_assert(std::is_same<T, BinExport2_CallGraph_Vertex_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return BinExport2_CallGraph_Vertex_Type_Name(static_cast<BinExport2_CallGraph_Vertex_Type>(value));
}
template <>
inline const std::string& BinExport2_CallGraph_Vertex_Type_Name(BinExport2_CallGraph_Vertex_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BinExport2_CallGraph_Vertex_Type_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool BinExport2_CallGraph_Vertex_Type_Parse(
    absl::string_view name, BinExport2_CallGraph_Vertex_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<BinExport2_CallGraph_Vertex_Type>(BinExport2_CallGraph_Vertex_Type_descriptor(), name,
                                           value);
}
enum BinExport2_Expression_Type : int {
  BinExport2_Expression_Type_SYMBOL = 1,
  BinExport2_Expression_Type_IMMEDIATE_INT = 2,
  BinExport2_Expression_Type_IMMEDIATE_FLOAT = 3,
  BinExport2_Expression_Type_OPERATOR = 4,
  BinExport2_Expression_Type_REGISTER = 5,
  BinExport2_Expression_Type_SIZE_PREFIX = 6,
  BinExport2_Expression_Type_DEREFERENCE = 7,
};

extern const uint32_t BinExport2_Expression_Type_internal_data_[];
inline constexpr BinExport2_Expression_Type BinExport2_Expression_Type_Type_MIN =
    static_cast<BinExport2_Expression_Type>(1);
inline constexpr BinExport2_Expression_Type BinExport2_Expression_Type_Type_MAX =
    static_cast<BinExport2_Expression_Type>(7);
inline bool BinExport2_Expression_Type_IsValid(int value) {
  return 1 <= value && value <= 7;
}
inline constexpr int BinExport2_Expression_Type_Type_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BinExport2_Expression_Type_descriptor();
template <typename T>
const std::string& BinExport2_Expression_Type_Name(T value) {
  static_assert(std::is_same<T, BinExport2_Expression_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return BinExport2_Expression_Type_Name(static_cast<BinExport2_Expression_Type>(value));
}
template <>
inline const std::string& BinExport2_Expression_Type_Name(BinExport2_Expression_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BinExport2_Expression_Type_descriptor, 1, 7>(
      static_cast<int>(value));
}
inline bool BinExport2_Expression_Type_Parse(
    absl::string_view name, BinExport2_Expression_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<BinExport2_Expression_Type>(BinExport2_Expression_Type_descriptor(), name,
                                           value);
}
enum BinExport2_FlowGraph_Edge_Type : int {
  BinExport2_FlowGraph_Edge_Type_CONDITION_TRUE = 1,
  BinExport2_FlowGraph_Edge_Type_CONDITION_FALSE = 2,
  BinExport2_FlowGraph_Edge_Type_UNCONDITIONAL = 3,
  BinExport2_FlowGraph_Edge_Type_SWITCH = 4,
};

extern const uint32_t BinExport2_FlowGraph_Edge_Type_internal_data_[];
inline constexpr BinExport2_FlowGraph_Edge_Type BinExport2_FlowGraph_Edge_Type_Type_MIN =
    static_cast<BinExport2_FlowGraph_Edge_Type>(1);
inline constexpr BinExport2_FlowGraph_Edge_Type BinExport2_FlowGraph_Edge_Type_Type_MAX =
    static_cast<BinExport2_FlowGraph_Edge_Type>(4);
inline bool BinExport2_FlowGraph_Edge_Type_IsValid(int value) {
  return 1 <= value && value <= 4;
}
inline constexpr int BinExport2_FlowGraph_Edge_Type_Type_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BinExport2_FlowGraph_Edge_Type_descriptor();
template <typename T>
const std::string& BinExport2_FlowGraph_Edge_Type_Name(T value) {
  static_assert(std::is_same<T, BinExport2_FlowGraph_Edge_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return BinExport2_FlowGraph_Edge_Type_Name(static_cast<BinExport2_FlowGraph_Edge_Type>(value));
}
template <>
inline const std::string& BinExport2_FlowGraph_Edge_Type_Name(BinExport2_FlowGraph_Edge_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BinExport2_FlowGraph_Edge_Type_descriptor, 1, 4>(
      static_cast<int>(value));
}
inline bool BinExport2_FlowGraph_Edge_Type_Parse(
    absl::string_view name, BinExport2_FlowGraph_Edge_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<BinExport2_FlowGraph_Edge_Type>(BinExport2_FlowGraph_Edge_Type_descriptor(), name,
                                           value);
}
enum BinExport2_Comment_Type : int {
  BinExport2_Comment_Type_DEFAULT = 0,
  BinExport2_Comment_Type_ANTERIOR = 1,
  BinExport2_Comment_Type_POSTERIOR = 2,
  BinExport2_Comment_Type_FUNCTION = 3,
  BinExport2_Comment_Type_ENUM = 4,
  BinExport2_Comment_Type_LOCATION = 5,
  BinExport2_Comment_Type_GLOBAL_REFERENCE = 6,
  BinExport2_Comment_Type_LOCAL_REFERENCE = 7,
};

extern const uint32_t BinExport2_Comment_Type_internal_data_[];
inline constexpr BinExport2_Comment_Type BinExport2_Comment_Type_Type_MIN =
    static_cast<BinExport2_Comment_Type>(0);
inline constexpr BinExport2_Comment_Type BinExport2_Comment_Type_Type_MAX =
    static_cast<BinExport2_Comment_Type>(7);
inline bool BinExport2_Comment_Type_IsValid(int value) {
  return 0 <= value && value <= 7;
}
inline constexpr int BinExport2_Comment_Type_Type_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BinExport2_Comment_Type_descriptor();
template <typename T>
const std::string& BinExport2_Comment_Type_Name(T value) {
  static_assert(std::is_same<T, BinExport2_Comment_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return BinExport2_Comment_Type_Name(static_cast<BinExport2_Comment_Type>(value));
}
template <>
inline const std::string& BinExport2_Comment_Type_Name(BinExport2_Comment_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BinExport2_Comment_Type_descriptor, 0, 7>(
      static_cast<int>(value));
}
inline bool BinExport2_Comment_Type_Parse(
    absl::string_view name, BinExport2_Comment_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<BinExport2_Comment_Type>(BinExport2_Comment_Type_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class BinExport2_Section final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Section) */ {
 public:
  inline BinExport2_Section() : BinExport2_Section(nullptr) {}
  ~BinExport2_Section() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Section* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Section));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Section(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Section(const BinExport2_Section& from) : BinExport2_Section(nullptr, from) {}
  inline BinExport2_Section(BinExport2_Section&& from) noexcept
      : BinExport2_Section(nullptr, std::move(from)) {}
  inline BinExport2_Section& operator=(const BinExport2_Section& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Section& operator=(BinExport2_Section&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Section& default_instance() {
    return *reinterpret_cast<const BinExport2_Section*>(
        &_BinExport2_Section_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(BinExport2_Section& a, BinExport2_Section& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Section* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Section* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Section* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Section>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Section& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Section& from) { BinExport2_Section::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Section* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Section"; }

 protected:
  explicit BinExport2_Section(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Section(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Section& from);
  BinExport2_Section(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Section&& from) noexcept
      : BinExport2_Section(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kSizeFieldNumber = 2,
    kFlagRFieldNumber = 3,
    kFlagWFieldNumber = 4,
    kFlagXFieldNumber = 5,
  };
  // optional uint64 address = 1;
  bool has_address() const;
  void clear_address() ;
  ::uint64_t address() const;
  void set_address(::uint64_t value);

  private:
  ::uint64_t _internal_address() const;
  void _internal_set_address(::uint64_t value);

  public:
  // optional uint64 size = 2;
  bool has_size() const;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // optional bool flag_r = 3;
  bool has_flag_r() const;
  void clear_flag_r() ;
  bool flag_r() const;
  void set_flag_r(bool value);

  private:
  bool _internal_flag_r() const;
  void _internal_set_flag_r(bool value);

  public:
  // optional bool flag_w = 4;
  bool has_flag_w() const;
  void clear_flag_w() ;
  bool flag_w() const;
  void set_flag_w(bool value);

  private:
  bool _internal_flag_w() const;
  void _internal_set_flag_w(bool value);

  public:
  // optional bool flag_x = 5;
  bool has_flag_x() const;
  void clear_flag_x() ;
  bool flag_x() const;
  void set_flag_x(bool value);

  private:
  bool _internal_flag_x() const;
  void _internal_set_flag_x(bool value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Section)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Section& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t address_;
    ::uint64_t size_;
    bool flag_r_;
    bool flag_w_;
    bool flag_x_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Section_class_data_;
// -------------------------------------------------------------------

class BinExport2_Reference final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Reference) */ {
 public:
  inline BinExport2_Reference() : BinExport2_Reference(nullptr) {}
  ~BinExport2_Reference() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Reference* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Reference));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Reference(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Reference(const BinExport2_Reference& from) : BinExport2_Reference(nullptr, from) {}
  inline BinExport2_Reference(BinExport2_Reference&& from) noexcept
      : BinExport2_Reference(nullptr, std::move(from)) {}
  inline BinExport2_Reference& operator=(const BinExport2_Reference& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Reference& operator=(BinExport2_Reference&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Reference& default_instance() {
    return *reinterpret_cast<const BinExport2_Reference*>(
        &_BinExport2_Reference_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(BinExport2_Reference& a, BinExport2_Reference& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Reference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Reference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Reference* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Reference>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Reference& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Reference& from) { BinExport2_Reference::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Reference* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Reference"; }

 protected:
  explicit BinExport2_Reference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Reference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Reference& from);
  BinExport2_Reference(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Reference&& from) noexcept
      : BinExport2_Reference(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInstructionIndexFieldNumber = 1,
    kInstructionOperandIndexFieldNumber = 2,
    kOperandExpressionIndexFieldNumber = 3,
    kStringTableIndexFieldNumber = 4,
  };
  // optional int32 instruction_index = 1;
  bool has_instruction_index() const;
  void clear_instruction_index() ;
  ::int32_t instruction_index() const;
  void set_instruction_index(::int32_t value);

  private:
  ::int32_t _internal_instruction_index() const;
  void _internal_set_instruction_index(::int32_t value);

  public:
  // optional int32 instruction_operand_index = 2 [default = 0];
  bool has_instruction_operand_index() const;
  void clear_instruction_operand_index() ;
  ::int32_t instruction_operand_index() const;
  void set_instruction_operand_index(::int32_t value);

  private:
  ::int32_t _internal_instruction_operand_index() const;
  void _internal_set_instruction_operand_index(::int32_t value);

  public:
  // optional int32 operand_expression_index = 3 [default = 0];
  bool has_operand_expression_index() const;
  void clear_operand_expression_index() ;
  ::int32_t operand_expression_index() const;
  void set_operand_expression_index(::int32_t value);

  private:
  ::int32_t _internal_operand_expression_index() const;
  void _internal_set_operand_expression_index(::int32_t value);

  public:
  // optional int32 string_table_index = 4;
  bool has_string_table_index() const;
  void clear_string_table_index() ;
  ::int32_t string_table_index() const;
  void set_string_table_index(::int32_t value);

  private:
  ::int32_t _internal_string_table_index() const;
  void _internal_set_string_table_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Reference)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Reference& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t instruction_index_;
    ::int32_t instruction_operand_index_;
    ::int32_t operand_expression_index_;
    ::int32_t string_table_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Reference_class_data_;
// -------------------------------------------------------------------

class BinExport2_Operand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Operand) */ {
 public:
  inline BinExport2_Operand() : BinExport2_Operand(nullptr) {}
  ~BinExport2_Operand() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Operand* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Operand));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Operand(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Operand(const BinExport2_Operand& from) : BinExport2_Operand(nullptr, from) {}
  inline BinExport2_Operand(BinExport2_Operand&& from) noexcept
      : BinExport2_Operand(nullptr, std::move(from)) {}
  inline BinExport2_Operand& operator=(const BinExport2_Operand& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Operand& operator=(BinExport2_Operand&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Operand& default_instance() {
    return *reinterpret_cast<const BinExport2_Operand*>(
        &_BinExport2_Operand_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(BinExport2_Operand& a, BinExport2_Operand& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Operand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Operand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Operand* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Operand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Operand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Operand& from) { BinExport2_Operand::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Operand* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Operand"; }

 protected:
  explicit BinExport2_Operand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Operand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Operand& from);
  BinExport2_Operand(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Operand&& from) noexcept
      : BinExport2_Operand(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExpressionIndexFieldNumber = 1,
  };
  // repeated int32 expression_index = 1;
  int expression_index_size() const;
  private:
  int _internal_expression_index_size() const;

  public:
  void clear_expression_index() ;
  ::int32_t expression_index(int index) const;
  void set_expression_index(int index, ::int32_t value);
  void add_expression_index(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& expression_index() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_expression_index();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_expression_index() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_expression_index();

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Operand)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Operand& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> expression_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Operand_class_data_;
// -------------------------------------------------------------------

class BinExport2_Module final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Module) */ {
 public:
  inline BinExport2_Module() : BinExport2_Module(nullptr) {}
  ~BinExport2_Module() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Module* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Module));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Module(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Module(const BinExport2_Module& from) : BinExport2_Module(nullptr, from) {}
  inline BinExport2_Module(BinExport2_Module&& from) noexcept
      : BinExport2_Module(nullptr, std::move(from)) {}
  inline BinExport2_Module& operator=(const BinExport2_Module& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Module& operator=(BinExport2_Module&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Module& default_instance() {
    return *reinterpret_cast<const BinExport2_Module*>(
        &_BinExport2_Module_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(BinExport2_Module& a, BinExport2_Module& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Module* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Module* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Module* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Module>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Module& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Module& from) { BinExport2_Module::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Module* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Module"; }

 protected:
  explicit BinExport2_Module(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Module(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Module& from);
  BinExport2_Module(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Module&& from) noexcept
      : BinExport2_Module(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Module)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 30,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Module& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Module_class_data_;
// -------------------------------------------------------------------

class BinExport2_Mnemonic final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Mnemonic) */ {
 public:
  inline BinExport2_Mnemonic() : BinExport2_Mnemonic(nullptr) {}
  ~BinExport2_Mnemonic() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Mnemonic* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Mnemonic));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Mnemonic(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Mnemonic(const BinExport2_Mnemonic& from) : BinExport2_Mnemonic(nullptr, from) {}
  inline BinExport2_Mnemonic(BinExport2_Mnemonic&& from) noexcept
      : BinExport2_Mnemonic(nullptr, std::move(from)) {}
  inline BinExport2_Mnemonic& operator=(const BinExport2_Mnemonic& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Mnemonic& operator=(BinExport2_Mnemonic&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Mnemonic& default_instance() {
    return *reinterpret_cast<const BinExport2_Mnemonic*>(
        &_BinExport2_Mnemonic_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(BinExport2_Mnemonic& a, BinExport2_Mnemonic& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Mnemonic* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Mnemonic* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Mnemonic* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Mnemonic>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Mnemonic& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Mnemonic& from) { BinExport2_Mnemonic::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Mnemonic* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Mnemonic"; }

 protected:
  explicit BinExport2_Mnemonic(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Mnemonic(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Mnemonic& from);
  BinExport2_Mnemonic(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Mnemonic&& from) noexcept
      : BinExport2_Mnemonic(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Mnemonic)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 32,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Mnemonic& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Mnemonic_class_data_;
// -------------------------------------------------------------------

class BinExport2_Meta final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Meta) */ {
 public:
  inline BinExport2_Meta() : BinExport2_Meta(nullptr) {}
  ~BinExport2_Meta() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Meta* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Meta));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Meta(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Meta(const BinExport2_Meta& from) : BinExport2_Meta(nullptr, from) {}
  inline BinExport2_Meta(BinExport2_Meta&& from) noexcept
      : BinExport2_Meta(nullptr, std::move(from)) {}
  inline BinExport2_Meta& operator=(const BinExport2_Meta& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Meta& operator=(BinExport2_Meta&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Meta& default_instance() {
    return *reinterpret_cast<const BinExport2_Meta*>(
        &_BinExport2_Meta_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BinExport2_Meta& a, BinExport2_Meta& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Meta* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Meta* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Meta* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Meta>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Meta& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Meta& from) { BinExport2_Meta::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Meta* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Meta"; }

 protected:
  explicit BinExport2_Meta(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Meta(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Meta& from);
  BinExport2_Meta(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Meta&& from) noexcept
      : BinExport2_Meta(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecutableNameFieldNumber = 1,
    kExecutableIdFieldNumber = 2,
    kArchitectureNameFieldNumber = 3,
    kTimestampFieldNumber = 4,
  };
  // optional string executable_name = 1;
  bool has_executable_name() const;
  void clear_executable_name() ;
  const std::string& executable_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_executable_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_executable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_executable_name();
  void set_allocated_executable_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_executable_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_executable_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_executable_name();

  public:
  // optional string executable_id = 2;
  bool has_executable_id() const;
  void clear_executable_id() ;
  const std::string& executable_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_executable_id(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_executable_id();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_executable_id();
  void set_allocated_executable_id(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_executable_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_executable_id(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_executable_id();

  public:
  // optional string architecture_name = 3;
  bool has_architecture_name() const;
  void clear_architecture_name() ;
  const std::string& architecture_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_architecture_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_architecture_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_architecture_name();
  void set_allocated_architecture_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_architecture_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_architecture_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_architecture_name();

  public:
  // optional int64 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Meta)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 69,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Meta& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr executable_name_;
    ::google::protobuf::internal::ArenaStringPtr executable_id_;
    ::google::protobuf::internal::ArenaStringPtr architecture_name_;
    ::int64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Meta_class_data_;
// -------------------------------------------------------------------

class BinExport2_Library final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Library) */ {
 public:
  inline BinExport2_Library() : BinExport2_Library(nullptr) {}
  ~BinExport2_Library() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Library* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Library));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Library(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Library(const BinExport2_Library& from) : BinExport2_Library(nullptr, from) {}
  inline BinExport2_Library(BinExport2_Library&& from) noexcept
      : BinExport2_Library(nullptr, std::move(from)) {}
  inline BinExport2_Library& operator=(const BinExport2_Library& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Library& operator=(BinExport2_Library&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Library& default_instance() {
    return *reinterpret_cast<const BinExport2_Library*>(
        &_BinExport2_Library_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(BinExport2_Library& a, BinExport2_Library& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Library* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Library* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Library* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Library>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Library& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Library& from) { BinExport2_Library::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Library* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Library"; }

 protected:
  explicit BinExport2_Library(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Library(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Library& from);
  BinExport2_Library(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Library&& from) noexcept
      : BinExport2_Library(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 3,
    kLoadAddressFieldNumber = 2,
    kIsStaticFieldNumber = 1,
  };
  // optional string name = 3;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // optional uint64 load_address = 2 [default = 0];
  bool has_load_address() const;
  void clear_load_address() ;
  ::uint64_t load_address() const;
  void set_load_address(::uint64_t value);

  private:
  ::uint64_t _internal_load_address() const;
  void _internal_set_load_address(::uint64_t value);

  public:
  // optional bool is_static = 1;
  bool has_is_static() const;
  void clear_is_static() ;
  bool is_static() const;
  void set_is_static(bool value);

  private:
  bool _internal_is_static() const;
  void _internal_set_is_static(bool value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Library)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 31,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Library& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint64_t load_address_;
    bool is_static_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Library_class_data_;
// -------------------------------------------------------------------

class BinExport2_Instruction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Instruction) */ {
 public:
  inline BinExport2_Instruction() : BinExport2_Instruction(nullptr) {}
  ~BinExport2_Instruction() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Instruction* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Instruction));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Instruction(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Instruction(const BinExport2_Instruction& from) : BinExport2_Instruction(nullptr, from) {}
  inline BinExport2_Instruction(BinExport2_Instruction&& from) noexcept
      : BinExport2_Instruction(nullptr, std::move(from)) {}
  inline BinExport2_Instruction& operator=(const BinExport2_Instruction& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Instruction& operator=(BinExport2_Instruction&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Instruction& default_instance() {
    return *reinterpret_cast<const BinExport2_Instruction*>(
        &_BinExport2_Instruction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(BinExport2_Instruction& a, BinExport2_Instruction& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Instruction* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Instruction* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Instruction* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Instruction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Instruction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Instruction& from) { BinExport2_Instruction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Instruction* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Instruction"; }

 protected:
  explicit BinExport2_Instruction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Instruction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Instruction& from);
  BinExport2_Instruction(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Instruction&& from) noexcept
      : BinExport2_Instruction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCallTargetFieldNumber = 2,
    kOperandIndexFieldNumber = 4,
    kCommentIndexFieldNumber = 6,
    kRawBytesFieldNumber = 5,
    kAddressFieldNumber = 1,
    kMnemonicIndexFieldNumber = 3,
  };
  // repeated uint64 call_target = 2;
  int call_target_size() const;
  private:
  int _internal_call_target_size() const;

  public:
  void clear_call_target() ;
  ::uint64_t call_target(int index) const;
  void set_call_target(int index, ::uint64_t value);
  void add_call_target(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& call_target() const;
  ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL mutable_call_target();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_call_target() const;
  ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL _internal_mutable_call_target();

  public:
  // repeated int32 operand_index = 4;
  int operand_index_size() const;
  private:
  int _internal_operand_index_size() const;

  public:
  void clear_operand_index() ;
  ::int32_t operand_index(int index) const;
  void set_operand_index(int index, ::int32_t value);
  void add_operand_index(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& operand_index() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_operand_index();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_operand_index() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_operand_index();

  public:
  // repeated int32 comment_index = 6;
  int comment_index_size() const;
  private:
  int _internal_comment_index_size() const;

  public:
  void clear_comment_index() ;
  ::int32_t comment_index(int index) const;
  void set_comment_index(int index, ::int32_t value);
  void add_comment_index(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& comment_index() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_comment_index();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_comment_index() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_comment_index();

  public:
  // optional bytes raw_bytes = 5;
  bool has_raw_bytes() const;
  void clear_raw_bytes() ;
  const std::string& raw_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_bytes(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_raw_bytes();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_raw_bytes();
  void set_allocated_raw_bytes(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_raw_bytes() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_raw_bytes(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_raw_bytes();

  public:
  // optional uint64 address = 1;
  bool has_address() const;
  void clear_address() ;
  ::uint64_t address() const;
  void set_address(::uint64_t value);

  private:
  ::uint64_t _internal_address() const;
  void _internal_set_address(::uint64_t value);

  public:
  // optional int32 mnemonic_index = 3 [default = 0];
  bool has_mnemonic_index() const;
  void clear_mnemonic_index() ;
  ::int32_t mnemonic_index() const;
  void set_mnemonic_index(::int32_t value);

  private:
  ::int32_t _internal_mnemonic_index() const;
  void _internal_set_mnemonic_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Instruction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Instruction& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> call_target_;
    ::google::protobuf::RepeatedField<::int32_t> operand_index_;
    ::google::protobuf::RepeatedField<::int32_t> comment_index_;
    ::google::protobuf::internal::ArenaStringPtr raw_bytes_;
    ::uint64_t address_;
    ::int32_t mnemonic_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Instruction_class_data_;
// -------------------------------------------------------------------

class BinExport2_FlowGraph_Edge final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.FlowGraph.Edge) */ {
 public:
  inline BinExport2_FlowGraph_Edge() : BinExport2_FlowGraph_Edge(nullptr) {}
  ~BinExport2_FlowGraph_Edge() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_FlowGraph_Edge));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_FlowGraph_Edge(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_FlowGraph_Edge(const BinExport2_FlowGraph_Edge& from) : BinExport2_FlowGraph_Edge(nullptr, from) {}
  inline BinExport2_FlowGraph_Edge(BinExport2_FlowGraph_Edge&& from) noexcept
      : BinExport2_FlowGraph_Edge(nullptr, std::move(from)) {}
  inline BinExport2_FlowGraph_Edge& operator=(const BinExport2_FlowGraph_Edge& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_FlowGraph_Edge& operator=(BinExport2_FlowGraph_Edge&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_FlowGraph_Edge& default_instance() {
    return *reinterpret_cast<const BinExport2_FlowGraph_Edge*>(
        &_BinExport2_FlowGraph_Edge_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(BinExport2_FlowGraph_Edge& a, BinExport2_FlowGraph_Edge& b) { a.Swap(&b); }
  inline void Swap(BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_FlowGraph_Edge>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_FlowGraph_Edge& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_FlowGraph_Edge& from) { BinExport2_FlowGraph_Edge::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.FlowGraph.Edge"; }

 protected:
  explicit BinExport2_FlowGraph_Edge(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_FlowGraph_Edge(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_FlowGraph_Edge& from);
  BinExport2_FlowGraph_Edge(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_FlowGraph_Edge&& from) noexcept
      : BinExport2_FlowGraph_Edge(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = BinExport2_FlowGraph_Edge_Type;
  static constexpr Type CONDITION_TRUE = BinExport2_FlowGraph_Edge_Type_CONDITION_TRUE;
  static constexpr Type CONDITION_FALSE = BinExport2_FlowGraph_Edge_Type_CONDITION_FALSE;
  static constexpr Type UNCONDITIONAL = BinExport2_FlowGraph_Edge_Type_UNCONDITIONAL;
  static constexpr Type SWITCH = BinExport2_FlowGraph_Edge_Type_SWITCH;
  static inline bool Type_IsValid(int value) {
    return BinExport2_FlowGraph_Edge_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = BinExport2_FlowGraph_Edge_Type_Type_MIN;
  static constexpr Type Type_MAX = BinExport2_FlowGraph_Edge_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = BinExport2_FlowGraph_Edge_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return BinExport2_FlowGraph_Edge_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return BinExport2_FlowGraph_Edge_Type_Name(value);
  }
  static inline bool Type_Parse(
      absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return BinExport2_FlowGraph_Edge_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kSourceBasicBlockIndexFieldNumber = 1,
    kTargetBasicBlockIndexFieldNumber = 2,
    kIsBackEdgeFieldNumber = 4,
    kTypeFieldNumber = 3,
  };
  // optional int32 source_basic_block_index = 1;
  bool has_source_basic_block_index() const;
  void clear_source_basic_block_index() ;
  ::int32_t source_basic_block_index() const;
  void set_source_basic_block_index(::int32_t value);

  private:
  ::int32_t _internal_source_basic_block_index() const;
  void _internal_set_source_basic_block_index(::int32_t value);

  public:
  // optional int32 target_basic_block_index = 2;
  bool has_target_basic_block_index() const;
  void clear_target_basic_block_index() ;
  ::int32_t target_basic_block_index() const;
  void set_target_basic_block_index(::int32_t value);

  private:
  ::int32_t _internal_target_basic_block_index() const;
  void _internal_set_target_basic_block_index(::int32_t value);

  public:
  // optional bool is_back_edge = 4 [default = false];
  bool has_is_back_edge() const;
  void clear_is_back_edge() ;
  bool is_back_edge() const;
  void set_is_back_edge(bool value);

  private:
  bool _internal_is_back_edge() const;
  void _internal_set_is_back_edge(bool value);

  public:
  // optional .BinExport2.FlowGraph.Edge.Type type = 3 [default = UNCONDITIONAL];
  bool has_type() const;
  void clear_type() ;
  ::BinExport2_FlowGraph_Edge_Type type() const;
  void set_type(::BinExport2_FlowGraph_Edge_Type value);

  private:
  ::BinExport2_FlowGraph_Edge_Type _internal_type() const;
  void _internal_set_type(::BinExport2_FlowGraph_Edge_Type value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.FlowGraph.Edge)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_FlowGraph_Edge& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t source_basic_block_index_;
    ::int32_t target_basic_block_index_;
    bool is_back_edge_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_FlowGraph_Edge_class_data_;
// -------------------------------------------------------------------

class BinExport2_Expression final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Expression) */ {
 public:
  inline BinExport2_Expression() : BinExport2_Expression(nullptr) {}
  ~BinExport2_Expression() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Expression* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Expression));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Expression(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Expression(const BinExport2_Expression& from) : BinExport2_Expression(nullptr, from) {}
  inline BinExport2_Expression(BinExport2_Expression&& from) noexcept
      : BinExport2_Expression(nullptr, std::move(from)) {}
  inline BinExport2_Expression& operator=(const BinExport2_Expression& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Expression& operator=(BinExport2_Expression&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Expression& default_instance() {
    return *reinterpret_cast<const BinExport2_Expression*>(
        &_BinExport2_Expression_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(BinExport2_Expression& a, BinExport2_Expression& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Expression* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Expression* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Expression* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Expression>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Expression& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Expression& from) { BinExport2_Expression::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Expression* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Expression"; }

 protected:
  explicit BinExport2_Expression(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Expression(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Expression& from);
  BinExport2_Expression(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Expression&& from) noexcept
      : BinExport2_Expression(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = BinExport2_Expression_Type;
  static constexpr Type SYMBOL = BinExport2_Expression_Type_SYMBOL;
  static constexpr Type IMMEDIATE_INT = BinExport2_Expression_Type_IMMEDIATE_INT;
  static constexpr Type IMMEDIATE_FLOAT = BinExport2_Expression_Type_IMMEDIATE_FLOAT;
  static constexpr Type OPERATOR = BinExport2_Expression_Type_OPERATOR;
  static constexpr Type REGISTER = BinExport2_Expression_Type_REGISTER;
  static constexpr Type SIZE_PREFIX = BinExport2_Expression_Type_SIZE_PREFIX;
  static constexpr Type DEREFERENCE = BinExport2_Expression_Type_DEREFERENCE;
  static inline bool Type_IsValid(int value) {
    return BinExport2_Expression_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = BinExport2_Expression_Type_Type_MIN;
  static constexpr Type Type_MAX = BinExport2_Expression_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = BinExport2_Expression_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return BinExport2_Expression_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return BinExport2_Expression_Type_Name(value);
  }
  static inline bool Type_Parse(
      absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return BinExport2_Expression_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kSymbolFieldNumber = 2,
    kImmediateFieldNumber = 3,
    kParentIndexFieldNumber = 4,
    kIsRelocationFieldNumber = 5,
    kTypeFieldNumber = 1,
  };
  // optional string symbol = 2;
  bool has_symbol() const;
  void clear_symbol() ;
  const std::string& symbol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_symbol(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_symbol();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_symbol();
  void set_allocated_symbol(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_symbol() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_symbol(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_symbol();

  public:
  // optional uint64 immediate = 3;
  bool has_immediate() const;
  void clear_immediate() ;
  ::uint64_t immediate() const;
  void set_immediate(::uint64_t value);

  private:
  ::uint64_t _internal_immediate() const;
  void _internal_set_immediate(::uint64_t value);

  public:
  // optional int32 parent_index = 4;
  bool has_parent_index() const;
  void clear_parent_index() ;
  ::int32_t parent_index() const;
  void set_parent_index(::int32_t value);

  private:
  ::int32_t _internal_parent_index() const;
  void _internal_set_parent_index(::int32_t value);

  public:
  // optional bool is_relocation = 5;
  bool has_is_relocation() const;
  void clear_is_relocation() ;
  bool is_relocation() const;
  void set_is_relocation(bool value);

  private:
  bool _internal_is_relocation() const;
  void _internal_set_is_relocation(bool value);

  public:
  // optional .BinExport2.Expression.Type type = 1 [default = IMMEDIATE_INT];
  bool has_type() const;
  void clear_type() ;
  ::BinExport2_Expression_Type type() const;
  void set_type(::BinExport2_Expression_Type value);

  private:
  ::BinExport2_Expression_Type _internal_type() const;
  void _internal_set_type(::BinExport2_Expression_Type value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Expression)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Expression& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr symbol_;
    ::uint64_t immediate_;
    ::int32_t parent_index_;
    bool is_relocation_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Expression_class_data_;
// -------------------------------------------------------------------

class BinExport2_DataReference final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.DataReference) */ {
 public:
  inline BinExport2_DataReference() : BinExport2_DataReference(nullptr) {}
  ~BinExport2_DataReference() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_DataReference* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_DataReference));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_DataReference(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_DataReference(const BinExport2_DataReference& from) : BinExport2_DataReference(nullptr, from) {}
  inline BinExport2_DataReference(BinExport2_DataReference&& from) noexcept
      : BinExport2_DataReference(nullptr, std::move(from)) {}
  inline BinExport2_DataReference& operator=(const BinExport2_DataReference& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_DataReference& operator=(BinExport2_DataReference&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_DataReference& default_instance() {
    return *reinterpret_cast<const BinExport2_DataReference*>(
        &_BinExport2_DataReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(BinExport2_DataReference& a, BinExport2_DataReference& b) { a.Swap(&b); }
  inline void Swap(BinExport2_DataReference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_DataReference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_DataReference* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_DataReference>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_DataReference& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_DataReference& from) { BinExport2_DataReference::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_DataReference* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.DataReference"; }

 protected:
  explicit BinExport2_DataReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_DataReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_DataReference& from);
  BinExport2_DataReference(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_DataReference&& from) noexcept
      : BinExport2_DataReference(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 2,
    kInstructionIndexFieldNumber = 1,
  };
  // optional uint64 address = 2;
  bool has_address() const;
  void clear_address() ;
  ::uint64_t address() const;
  void set_address(::uint64_t value);

  private:
  ::uint64_t _internal_address() const;
  void _internal_set_address(::uint64_t value);

  public:
  // optional int32 instruction_index = 1;
  bool has_instruction_index() const;
  void clear_instruction_index() ;
  ::int32_t instruction_index() const;
  void set_instruction_index(::int32_t value);

  private:
  ::int32_t _internal_instruction_index() const;
  void _internal_set_instruction_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.DataReference)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_DataReference& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t address_;
    ::int32_t instruction_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_DataReference_class_data_;
// -------------------------------------------------------------------

class BinExport2_Comment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.Comment) */ {
 public:
  inline BinExport2_Comment() : BinExport2_Comment(nullptr) {}
  ~BinExport2_Comment() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_Comment* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_Comment));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_Comment(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_Comment(const BinExport2_Comment& from) : BinExport2_Comment(nullptr, from) {}
  inline BinExport2_Comment(BinExport2_Comment&& from) noexcept
      : BinExport2_Comment(nullptr, std::move(from)) {}
  inline BinExport2_Comment& operator=(const BinExport2_Comment& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_Comment& operator=(BinExport2_Comment&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_Comment& default_instance() {
    return *reinterpret_cast<const BinExport2_Comment*>(
        &_BinExport2_Comment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(BinExport2_Comment& a, BinExport2_Comment& b) { a.Swap(&b); }
  inline void Swap(BinExport2_Comment* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_Comment* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_Comment* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_Comment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_Comment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_Comment& from) { BinExport2_Comment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_Comment* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.Comment"; }

 protected:
  explicit BinExport2_Comment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_Comment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_Comment& from);
  BinExport2_Comment(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_Comment&& from) noexcept
      : BinExport2_Comment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = BinExport2_Comment_Type;
  static constexpr Type DEFAULT = BinExport2_Comment_Type_DEFAULT;
  static constexpr Type ANTERIOR = BinExport2_Comment_Type_ANTERIOR;
  static constexpr Type POSTERIOR = BinExport2_Comment_Type_POSTERIOR;
  static constexpr Type FUNCTION = BinExport2_Comment_Type_FUNCTION;
  static constexpr Type ENUM = BinExport2_Comment_Type_ENUM;
  static constexpr Type LOCATION = BinExport2_Comment_Type_LOCATION;
  static constexpr Type GLOBAL_REFERENCE = BinExport2_Comment_Type_GLOBAL_REFERENCE;
  static constexpr Type LOCAL_REFERENCE = BinExport2_Comment_Type_LOCAL_REFERENCE;
  static inline bool Type_IsValid(int value) {
    return BinExport2_Comment_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = BinExport2_Comment_Type_Type_MIN;
  static constexpr Type Type_MAX = BinExport2_Comment_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = BinExport2_Comment_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return BinExport2_Comment_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return BinExport2_Comment_Type_Name(value);
  }
  static inline bool Type_Parse(
      absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return BinExport2_Comment_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kInstructionIndexFieldNumber = 1,
    kInstructionOperandIndexFieldNumber = 2,
    kOperandExpressionIndexFieldNumber = 3,
    kStringTableIndexFieldNumber = 4,
    kRepeatableFieldNumber = 5,
    kTypeFieldNumber = 6,
  };
  // optional int32 instruction_index = 1;
  bool has_instruction_index() const;
  void clear_instruction_index() ;
  ::int32_t instruction_index() const;
  void set_instruction_index(::int32_t value);

  private:
  ::int32_t _internal_instruction_index() const;
  void _internal_set_instruction_index(::int32_t value);

  public:
  // optional int32 instruction_operand_index = 2 [default = 0];
  bool has_instruction_operand_index() const;
  void clear_instruction_operand_index() ;
  ::int32_t instruction_operand_index() const;
  void set_instruction_operand_index(::int32_t value);

  private:
  ::int32_t _internal_instruction_operand_index() const;
  void _internal_set_instruction_operand_index(::int32_t value);

  public:
  // optional int32 operand_expression_index = 3 [default = 0];
  bool has_operand_expression_index() const;
  void clear_operand_expression_index() ;
  ::int32_t operand_expression_index() const;
  void set_operand_expression_index(::int32_t value);

  private:
  ::int32_t _internal_operand_expression_index() const;
  void _internal_set_operand_expression_index(::int32_t value);

  public:
  // optional int32 string_table_index = 4;
  bool has_string_table_index() const;
  void clear_string_table_index() ;
  ::int32_t string_table_index() const;
  void set_string_table_index(::int32_t value);

  private:
  ::int32_t _internal_string_table_index() const;
  void _internal_set_string_table_index(::int32_t value);

  public:
  // optional bool repeatable = 5;
  bool has_repeatable() const;
  void clear_repeatable() ;
  bool repeatable() const;
  void set_repeatable(bool value);

  private:
  bool _internal_repeatable() const;
  void _internal_set_repeatable(bool value);

  public:
  // optional .BinExport2.Comment.Type type = 6 [default = DEFAULT];
  bool has_type() const;
  void clear_type() ;
  ::BinExport2_Comment_Type type() const;
  void set_type(::BinExport2_Comment_Type value);

  private:
  ::BinExport2_Comment_Type _internal_type() const;
  void _internal_set_type(::BinExport2_Comment_Type value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.Comment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_Comment& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t instruction_index_;
    ::int32_t instruction_operand_index_;
    ::int32_t operand_expression_index_;
    ::int32_t string_table_index_;
    bool repeatable_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_Comment_class_data_;
// -------------------------------------------------------------------

class BinExport2_CallGraph_Vertex final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.CallGraph.Vertex) */ {
 public:
  inline BinExport2_CallGraph_Vertex() : BinExport2_CallGraph_Vertex(nullptr) {}
  ~BinExport2_CallGraph_Vertex() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_CallGraph_Vertex));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_CallGraph_Vertex(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_CallGraph_Vertex(const BinExport2_CallGraph_Vertex& from) : BinExport2_CallGraph_Vertex(nullptr, from) {}
  inline BinExport2_CallGraph_Vertex(BinExport2_CallGraph_Vertex&& from) noexcept
      : BinExport2_CallGraph_Vertex(nullptr, std::move(from)) {}
  inline BinExport2_CallGraph_Vertex& operator=(const BinExport2_CallGraph_Vertex& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_CallGraph_Vertex& operator=(BinExport2_CallGraph_Vertex&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_CallGraph_Vertex& default_instance() {
    return *reinterpret_cast<const BinExport2_CallGraph_Vertex*>(
        &_BinExport2_CallGraph_Vertex_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BinExport2_CallGraph_Vertex& a, BinExport2_CallGraph_Vertex& b) { a.Swap(&b); }
  inline void Swap(BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_CallGraph_Vertex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_CallGraph_Vertex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_CallGraph_Vertex& from) { BinExport2_CallGraph_Vertex::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.CallGraph.Vertex"; }

 protected:
  explicit BinExport2_CallGraph_Vertex(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_CallGraph_Vertex(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_CallGraph_Vertex& from);
  BinExport2_CallGraph_Vertex(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_CallGraph_Vertex&& from) noexcept
      : BinExport2_CallGraph_Vertex(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = BinExport2_CallGraph_Vertex_Type;
  static constexpr Type NORMAL = BinExport2_CallGraph_Vertex_Type_NORMAL;
  static constexpr Type LIBRARY = BinExport2_CallGraph_Vertex_Type_LIBRARY;
  static constexpr Type IMPORTED = BinExport2_CallGraph_Vertex_Type_IMPORTED;
  static constexpr Type THUNK = BinExport2_CallGraph_Vertex_Type_THUNK;
  static constexpr Type INVALID = BinExport2_CallGraph_Vertex_Type_INVALID;
  static inline bool Type_IsValid(int value) {
    return BinExport2_CallGraph_Vertex_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = BinExport2_CallGraph_Vertex_Type_Type_MIN;
  static constexpr Type Type_MAX = BinExport2_CallGraph_Vertex_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = BinExport2_CallGraph_Vertex_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return BinExport2_CallGraph_Vertex_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return BinExport2_CallGraph_Vertex_Type_Name(value);
  }
  static inline bool Type_Parse(
      absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return BinExport2_CallGraph_Vertex_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kMangledNameFieldNumber = 3,
    kDemangledNameFieldNumber = 4,
    kAddressFieldNumber = 1,
    kTypeFieldNumber = 2,
    kLibraryIndexFieldNumber = 5,
    kModuleIndexFieldNumber = 6,
  };
  // optional string mangled_name = 3;
  bool has_mangled_name() const;
  void clear_mangled_name() ;
  const std::string& mangled_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mangled_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_mangled_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_mangled_name();
  void set_allocated_mangled_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_mangled_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_mangled_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_mangled_name();

  public:
  // optional string demangled_name = 4;
  bool has_demangled_name() const;
  void clear_demangled_name() ;
  const std::string& demangled_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_demangled_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_demangled_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_demangled_name();
  void set_allocated_demangled_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_demangled_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_demangled_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_demangled_name();

  public:
  // optional uint64 address = 1;
  bool has_address() const;
  void clear_address() ;
  ::uint64_t address() const;
  void set_address(::uint64_t value);

  private:
  ::uint64_t _internal_address() const;
  void _internal_set_address(::uint64_t value);

  public:
  // optional .BinExport2.CallGraph.Vertex.Type type = 2 [default = NORMAL];
  bool has_type() const;
  void clear_type() ;
  ::BinExport2_CallGraph_Vertex_Type type() const;
  void set_type(::BinExport2_CallGraph_Vertex_Type value);

  private:
  ::BinExport2_CallGraph_Vertex_Type _internal_type() const;
  void _internal_set_type(::BinExport2_CallGraph_Vertex_Type value);

  public:
  // optional int32 library_index = 5;
  bool has_library_index() const;
  void clear_library_index() ;
  ::int32_t library_index() const;
  void set_library_index(::int32_t value);

  private:
  ::int32_t _internal_library_index() const;
  void _internal_set_library_index(::int32_t value);

  public:
  // optional int32 module_index = 6;
  bool has_module_index() const;
  void clear_module_index() ;
  ::int32_t module_index() const;
  void set_module_index(::int32_t value);

  private:
  ::int32_t _internal_module_index() const;
  void _internal_set_module_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.CallGraph.Vertex)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_CallGraph_Vertex& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr mangled_name_;
    ::google::protobuf::internal::ArenaStringPtr demangled_name_;
    ::uint64_t address_;
    int type_;
    ::int32_t library_index_;
    ::int32_t module_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_CallGraph_Vertex_class_data_;
// -------------------------------------------------------------------

class BinExport2_CallGraph_Edge final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.CallGraph.Edge) */ {
 public:
  inline BinExport2_CallGraph_Edge() : BinExport2_CallGraph_Edge(nullptr) {}
  ~BinExport2_CallGraph_Edge() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_CallGraph_Edge* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_CallGraph_Edge));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_CallGraph_Edge(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_CallGraph_Edge(const BinExport2_CallGraph_Edge& from) : BinExport2_CallGraph_Edge(nullptr, from) {}
  inline BinExport2_CallGraph_Edge(BinExport2_CallGraph_Edge&& from) noexcept
      : BinExport2_CallGraph_Edge(nullptr, std::move(from)) {}
  inline BinExport2_CallGraph_Edge& operator=(const BinExport2_CallGraph_Edge& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_CallGraph_Edge& operator=(BinExport2_CallGraph_Edge&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_CallGraph_Edge& default_instance() {
    return *reinterpret_cast<const BinExport2_CallGraph_Edge*>(
        &_BinExport2_CallGraph_Edge_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BinExport2_CallGraph_Edge& a, BinExport2_CallGraph_Edge& b) { a.Swap(&b); }
  inline void Swap(BinExport2_CallGraph_Edge* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_CallGraph_Edge* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_CallGraph_Edge* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_CallGraph_Edge>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_CallGraph_Edge& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_CallGraph_Edge& from) { BinExport2_CallGraph_Edge::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_CallGraph_Edge* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.CallGraph.Edge"; }

 protected:
  explicit BinExport2_CallGraph_Edge(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_CallGraph_Edge(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_CallGraph_Edge& from);
  BinExport2_CallGraph_Edge(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_CallGraph_Edge&& from) noexcept
      : BinExport2_CallGraph_Edge(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceVertexIndexFieldNumber = 1,
    kTargetVertexIndexFieldNumber = 2,
  };
  // optional int32 source_vertex_index = 1;
  bool has_source_vertex_index() const;
  void clear_source_vertex_index() ;
  ::int32_t source_vertex_index() const;
  void set_source_vertex_index(::int32_t value);

  private:
  ::int32_t _internal_source_vertex_index() const;
  void _internal_set_source_vertex_index(::int32_t value);

  public:
  // optional int32 target_vertex_index = 2;
  bool has_target_vertex_index() const;
  void clear_target_vertex_index() ;
  ::int32_t target_vertex_index() const;
  void set_target_vertex_index(::int32_t value);

  private:
  ::int32_t _internal_target_vertex_index() const;
  void _internal_set_target_vertex_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.CallGraph.Edge)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_CallGraph_Edge& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t source_vertex_index_;
    ::int32_t target_vertex_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_CallGraph_Edge_class_data_;
// -------------------------------------------------------------------

class BinExport2_BasicBlock_IndexRange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.BasicBlock.IndexRange) */ {
 public:
  inline BinExport2_BasicBlock_IndexRange() : BinExport2_BasicBlock_IndexRange(nullptr) {}
  ~BinExport2_BasicBlock_IndexRange() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_BasicBlock_IndexRange));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_BasicBlock_IndexRange(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_BasicBlock_IndexRange(const BinExport2_BasicBlock_IndexRange& from) : BinExport2_BasicBlock_IndexRange(nullptr, from) {}
  inline BinExport2_BasicBlock_IndexRange(BinExport2_BasicBlock_IndexRange&& from) noexcept
      : BinExport2_BasicBlock_IndexRange(nullptr, std::move(from)) {}
  inline BinExport2_BasicBlock_IndexRange& operator=(const BinExport2_BasicBlock_IndexRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_BasicBlock_IndexRange& operator=(BinExport2_BasicBlock_IndexRange&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_BasicBlock_IndexRange& default_instance() {
    return *reinterpret_cast<const BinExport2_BasicBlock_IndexRange*>(
        &_BinExport2_BasicBlock_IndexRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(BinExport2_BasicBlock_IndexRange& a, BinExport2_BasicBlock_IndexRange& b) { a.Swap(&b); }
  inline void Swap(BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_BasicBlock_IndexRange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_BasicBlock_IndexRange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_BasicBlock_IndexRange& from) { BinExport2_BasicBlock_IndexRange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.BasicBlock.IndexRange"; }

 protected:
  explicit BinExport2_BasicBlock_IndexRange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_BasicBlock_IndexRange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_BasicBlock_IndexRange& from);
  BinExport2_BasicBlock_IndexRange(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_BasicBlock_IndexRange&& from) noexcept
      : BinExport2_BasicBlock_IndexRange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBeginIndexFieldNumber = 1,
    kEndIndexFieldNumber = 2,
  };
  // optional int32 begin_index = 1;
  bool has_begin_index() const;
  void clear_begin_index() ;
  ::int32_t begin_index() const;
  void set_begin_index(::int32_t value);

  private:
  ::int32_t _internal_begin_index() const;
  void _internal_set_begin_index(::int32_t value);

  public:
  // optional int32 end_index = 2;
  bool has_end_index() const;
  void clear_end_index() ;
  ::int32_t end_index() const;
  void set_end_index(::int32_t value);

  private:
  ::int32_t _internal_end_index() const;
  void _internal_set_end_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.BasicBlock.IndexRange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_BasicBlock_IndexRange& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t begin_index_;
    ::int32_t end_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_BasicBlock_IndexRange_class_data_;
// -------------------------------------------------------------------

class BinExport2_FlowGraph final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.FlowGraph) */ {
 public:
  inline BinExport2_FlowGraph() : BinExport2_FlowGraph(nullptr) {}
  ~BinExport2_FlowGraph() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_FlowGraph* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_FlowGraph));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_FlowGraph(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_FlowGraph(const BinExport2_FlowGraph& from) : BinExport2_FlowGraph(nullptr, from) {}
  inline BinExport2_FlowGraph(BinExport2_FlowGraph&& from) noexcept
      : BinExport2_FlowGraph(nullptr, std::move(from)) {}
  inline BinExport2_FlowGraph& operator=(const BinExport2_FlowGraph& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_FlowGraph& operator=(BinExport2_FlowGraph&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_FlowGraph& default_instance() {
    return *reinterpret_cast<const BinExport2_FlowGraph*>(
        &_BinExport2_FlowGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(BinExport2_FlowGraph& a, BinExport2_FlowGraph& b) { a.Swap(&b); }
  inline void Swap(BinExport2_FlowGraph* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_FlowGraph* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_FlowGraph* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_FlowGraph>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_FlowGraph& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_FlowGraph& from) { BinExport2_FlowGraph::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_FlowGraph* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.FlowGraph"; }

 protected:
  explicit BinExport2_FlowGraph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_FlowGraph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_FlowGraph& from);
  BinExport2_FlowGraph(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_FlowGraph&& from) noexcept
      : BinExport2_FlowGraph(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Edge = BinExport2_FlowGraph_Edge;

  // accessors -------------------------------------------------------
  enum : int {
    kBasicBlockIndexFieldNumber = 1,
    kEdgeFieldNumber = 2,
    kEntryBasicBlockIndexFieldNumber = 3,
  };
  // repeated int32 basic_block_index = 1;
  int basic_block_index_size() const;
  private:
  int _internal_basic_block_index_size() const;

  public:
  void clear_basic_block_index() ;
  ::int32_t basic_block_index(int index) const;
  void set_basic_block_index(int index, ::int32_t value);
  void add_basic_block_index(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& basic_block_index() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_basic_block_index();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_basic_block_index() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_basic_block_index();

  public:
  // repeated .BinExport2.FlowGraph.Edge edge = 2;
  int edge_size() const;
  private:
  int _internal_edge_size() const;

  public:
  void clear_edge() ;
  ::BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL mutable_edge(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph_Edge>* PROTOBUF_NONNULL mutable_edge();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph_Edge>& _internal_edge() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph_Edge>* PROTOBUF_NONNULL _internal_mutable_edge();
  public:
  const ::BinExport2_FlowGraph_Edge& edge(int index) const;
  ::BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL add_edge();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph_Edge>& edge() const;
  // optional int32 entry_basic_block_index = 3;
  bool has_entry_basic_block_index() const;
  void clear_entry_basic_block_index() ;
  ::int32_t entry_basic_block_index() const;
  void set_entry_basic_block_index(::int32_t value);

  private:
  ::int32_t _internal_entry_basic_block_index() const;
  void _internal_set_entry_basic_block_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BinExport2.FlowGraph)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_FlowGraph& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> basic_block_index_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_FlowGraph_Edge > edge_;
    ::int32_t entry_basic_block_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_FlowGraph_class_data_;
// -------------------------------------------------------------------

class BinExport2_CallGraph final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.CallGraph) */ {
 public:
  inline BinExport2_CallGraph() : BinExport2_CallGraph(nullptr) {}
  ~BinExport2_CallGraph() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_CallGraph* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_CallGraph));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_CallGraph(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_CallGraph(const BinExport2_CallGraph& from) : BinExport2_CallGraph(nullptr, from) {}
  inline BinExport2_CallGraph(BinExport2_CallGraph&& from) noexcept
      : BinExport2_CallGraph(nullptr, std::move(from)) {}
  inline BinExport2_CallGraph& operator=(const BinExport2_CallGraph& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_CallGraph& operator=(BinExport2_CallGraph&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_CallGraph& default_instance() {
    return *reinterpret_cast<const BinExport2_CallGraph*>(
        &_BinExport2_CallGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BinExport2_CallGraph& a, BinExport2_CallGraph& b) { a.Swap(&b); }
  inline void Swap(BinExport2_CallGraph* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_CallGraph* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_CallGraph* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_CallGraph>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_CallGraph& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_CallGraph& from) { BinExport2_CallGraph::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_CallGraph* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.CallGraph"; }

 protected:
  explicit BinExport2_CallGraph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_CallGraph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_CallGraph& from);
  BinExport2_CallGraph(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_CallGraph&& from) noexcept
      : BinExport2_CallGraph(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Vertex = BinExport2_CallGraph_Vertex;
  using Edge = BinExport2_CallGraph_Edge;

  // accessors -------------------------------------------------------
  enum : int {
    kVertexFieldNumber = 1,
    kEdgeFieldNumber = 2,
  };
  // repeated .BinExport2.CallGraph.Vertex vertex = 1;
  int vertex_size() const;
  private:
  int _internal_vertex_size() const;

  public:
  void clear_vertex() ;
  ::BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL mutable_vertex(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Vertex>* PROTOBUF_NONNULL mutable_vertex();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Vertex>& _internal_vertex() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Vertex>* PROTOBUF_NONNULL _internal_mutable_vertex();
  public:
  const ::BinExport2_CallGraph_Vertex& vertex(int index) const;
  ::BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL add_vertex();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Vertex>& vertex() const;
  // repeated .BinExport2.CallGraph.Edge edge = 2;
  int edge_size() const;
  private:
  int _internal_edge_size() const;

  public:
  void clear_edge() ;
  ::BinExport2_CallGraph_Edge* PROTOBUF_NONNULL mutable_edge(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Edge>* PROTOBUF_NONNULL mutable_edge();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Edge>& _internal_edge() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Edge>* PROTOBUF_NONNULL _internal_mutable_edge();
  public:
  const ::BinExport2_CallGraph_Edge& edge(int index) const;
  ::BinExport2_CallGraph_Edge* PROTOBUF_NONNULL add_edge();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Edge>& edge() const;
  // @@protoc_insertion_point(class_scope:BinExport2.CallGraph)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_CallGraph& from_msg);
    ::google::protobuf::RepeatedPtrField< ::BinExport2_CallGraph_Vertex > vertex_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_CallGraph_Edge > edge_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_CallGraph_class_data_;
// -------------------------------------------------------------------

class BinExport2_BasicBlock final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2.BasicBlock) */ {
 public:
  inline BinExport2_BasicBlock() : BinExport2_BasicBlock(nullptr) {}
  ~BinExport2_BasicBlock() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2_BasicBlock* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2_BasicBlock));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2_BasicBlock(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2_BasicBlock(const BinExport2_BasicBlock& from) : BinExport2_BasicBlock(nullptr, from) {}
  inline BinExport2_BasicBlock(BinExport2_BasicBlock&& from) noexcept
      : BinExport2_BasicBlock(nullptr, std::move(from)) {}
  inline BinExport2_BasicBlock& operator=(const BinExport2_BasicBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2_BasicBlock& operator=(BinExport2_BasicBlock&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2_BasicBlock& default_instance() {
    return *reinterpret_cast<const BinExport2_BasicBlock*>(
        &_BinExport2_BasicBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(BinExport2_BasicBlock& a, BinExport2_BasicBlock& b) { a.Swap(&b); }
  inline void Swap(BinExport2_BasicBlock* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2_BasicBlock* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2_BasicBlock* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2_BasicBlock>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2_BasicBlock& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2_BasicBlock& from) { BinExport2_BasicBlock::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2_BasicBlock* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2.BasicBlock"; }

 protected:
  explicit BinExport2_BasicBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2_BasicBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2_BasicBlock& from);
  BinExport2_BasicBlock(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2_BasicBlock&& from) noexcept
      : BinExport2_BasicBlock(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using IndexRange = BinExport2_BasicBlock_IndexRange;

  // accessors -------------------------------------------------------
  enum : int {
    kInstructionIndexFieldNumber = 1,
  };
  // repeated .BinExport2.BasicBlock.IndexRange instruction_index = 1;
  int instruction_index_size() const;
  private:
  int _internal_instruction_index_size() const;

  public:
  void clear_instruction_index() ;
  ::BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL mutable_instruction_index(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock_IndexRange>* PROTOBUF_NONNULL mutable_instruction_index();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock_IndexRange>& _internal_instruction_index() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock_IndexRange>* PROTOBUF_NONNULL _internal_mutable_instruction_index();
  public:
  const ::BinExport2_BasicBlock_IndexRange& instruction_index(int index) const;
  ::BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL add_instruction_index();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock_IndexRange>& instruction_index() const;
  // @@protoc_insertion_point(class_scope:BinExport2.BasicBlock)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2_BasicBlock& from_msg);
    ::google::protobuf::RepeatedPtrField< ::BinExport2_BasicBlock_IndexRange > instruction_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_BasicBlock_class_data_;
// -------------------------------------------------------------------

class BinExport2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BinExport2) */ {
 public:
  inline BinExport2() : BinExport2(nullptr) {}
  ~BinExport2() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BinExport2* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BinExport2));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinExport2(::google::protobuf::internal::ConstantInitialized);

  inline BinExport2(const BinExport2& from) : BinExport2(nullptr, from) {}
  inline BinExport2(BinExport2&& from) noexcept
      : BinExport2(nullptr, std::move(from)) {}
  inline BinExport2& operator=(const BinExport2& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinExport2& operator=(BinExport2&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinExport2& default_instance() {
    return *reinterpret_cast<const BinExport2*>(
        &_BinExport2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(BinExport2& a, BinExport2& b) { a.Swap(&b); }
  inline void Swap(BinExport2* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinExport2* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinExport2* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BinExport2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinExport2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinExport2& from) { BinExport2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BinExport2* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BinExport2"; }

 protected:
  explicit BinExport2(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BinExport2(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BinExport2& from);
  BinExport2(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BinExport2&& from) noexcept
      : BinExport2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Meta = BinExport2_Meta;
  using CallGraph = BinExport2_CallGraph;
  using Expression = BinExport2_Expression;
  using Operand = BinExport2_Operand;
  using Mnemonic = BinExport2_Mnemonic;
  using Instruction = BinExport2_Instruction;
  using BasicBlock = BinExport2_BasicBlock;
  using FlowGraph = BinExport2_FlowGraph;
  using Reference = BinExport2_Reference;
  using DataReference = BinExport2_DataReference;
  using Comment = BinExport2_Comment;
  using Section = BinExport2_Section;
  using Library = BinExport2_Library;
  using Module = BinExport2_Module;

  // accessors -------------------------------------------------------
  enum : int {
    kExpressionFieldNumber = 2,
    kOperandFieldNumber = 3,
    kMnemonicFieldNumber = 4,
    kInstructionFieldNumber = 5,
    kBasicBlockFieldNumber = 6,
    kFlowGraphFieldNumber = 7,
    kStringTableFieldNumber = 9,
    kAddressCommentFieldNumber = 10,
    kStringReferenceFieldNumber = 11,
    kExpressionSubstitutionFieldNumber = 12,
    kSectionFieldNumber = 13,
    kLibraryFieldNumber = 14,
    kDataReferenceFieldNumber = 15,
    kModuleFieldNumber = 16,
    kCommentFieldNumber = 17,
    kMetaInformationFieldNumber = 1,
    kCallGraphFieldNumber = 8,
  };
  // repeated .BinExport2.Expression expression = 2;
  int expression_size() const;
  private:
  int _internal_expression_size() const;

  public:
  void clear_expression() ;
  ::BinExport2_Expression* PROTOBUF_NONNULL mutable_expression(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Expression>* PROTOBUF_NONNULL mutable_expression();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Expression>& _internal_expression() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Expression>* PROTOBUF_NONNULL _internal_mutable_expression();
  public:
  const ::BinExport2_Expression& expression(int index) const;
  ::BinExport2_Expression* PROTOBUF_NONNULL add_expression();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Expression>& expression() const;
  // repeated .BinExport2.Operand operand = 3;
  int operand_size() const;
  private:
  int _internal_operand_size() const;

  public:
  void clear_operand() ;
  ::BinExport2_Operand* PROTOBUF_NONNULL mutable_operand(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Operand>* PROTOBUF_NONNULL mutable_operand();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Operand>& _internal_operand() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Operand>* PROTOBUF_NONNULL _internal_mutable_operand();
  public:
  const ::BinExport2_Operand& operand(int index) const;
  ::BinExport2_Operand* PROTOBUF_NONNULL add_operand();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Operand>& operand() const;
  // repeated .BinExport2.Mnemonic mnemonic = 4;
  int mnemonic_size() const;
  private:
  int _internal_mnemonic_size() const;

  public:
  void clear_mnemonic() ;
  ::BinExport2_Mnemonic* PROTOBUF_NONNULL mutable_mnemonic(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Mnemonic>* PROTOBUF_NONNULL mutable_mnemonic();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Mnemonic>& _internal_mnemonic() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Mnemonic>* PROTOBUF_NONNULL _internal_mutable_mnemonic();
  public:
  const ::BinExport2_Mnemonic& mnemonic(int index) const;
  ::BinExport2_Mnemonic* PROTOBUF_NONNULL add_mnemonic();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Mnemonic>& mnemonic() const;
  // repeated .BinExport2.Instruction instruction = 5;
  int instruction_size() const;
  private:
  int _internal_instruction_size() const;

  public:
  void clear_instruction() ;
  ::BinExport2_Instruction* PROTOBUF_NONNULL mutable_instruction(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Instruction>* PROTOBUF_NONNULL mutable_instruction();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Instruction>& _internal_instruction() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Instruction>* PROTOBUF_NONNULL _internal_mutable_instruction();
  public:
  const ::BinExport2_Instruction& instruction(int index) const;
  ::BinExport2_Instruction* PROTOBUF_NONNULL add_instruction();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Instruction>& instruction() const;
  // repeated .BinExport2.BasicBlock basic_block = 6;
  int basic_block_size() const;
  private:
  int _internal_basic_block_size() const;

  public:
  void clear_basic_block() ;
  ::BinExport2_BasicBlock* PROTOBUF_NONNULL mutable_basic_block(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock>* PROTOBUF_NONNULL mutable_basic_block();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock>& _internal_basic_block() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock>* PROTOBUF_NONNULL _internal_mutable_basic_block();
  public:
  const ::BinExport2_BasicBlock& basic_block(int index) const;
  ::BinExport2_BasicBlock* PROTOBUF_NONNULL add_basic_block();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock>& basic_block() const;
  // repeated .BinExport2.FlowGraph flow_graph = 7;
  int flow_graph_size() const;
  private:
  int _internal_flow_graph_size() const;

  public:
  void clear_flow_graph() ;
  ::BinExport2_FlowGraph* PROTOBUF_NONNULL mutable_flow_graph(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph>* PROTOBUF_NONNULL mutable_flow_graph();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph>& _internal_flow_graph() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph>* PROTOBUF_NONNULL _internal_mutable_flow_graph();
  public:
  const ::BinExport2_FlowGraph& flow_graph(int index) const;
  ::BinExport2_FlowGraph* PROTOBUF_NONNULL add_flow_graph();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph>& flow_graph() const;
  // repeated string string_table = 9;
  int string_table_size() const;
  private:
  int _internal_string_table_size() const;

  public:
  void clear_string_table() ;
  const std::string& string_table(int index) const;
  std::string* PROTOBUF_NONNULL mutable_string_table(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string_table(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_string_table();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_string_table(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& string_table() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_string_table();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_string_table() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_string_table();

  public:
  // repeated .BinExport2.Reference address_comment = 10 [deprecated = true];
  [[deprecated]]  int address_comment_size() const;
  private:
  int _internal_address_comment_size() const;

  public:
  [[deprecated]]  void clear_address_comment() ;
  [[deprecated]] ::BinExport2_Reference* PROTOBUF_NONNULL mutable_address_comment(int index);
  [[deprecated]] ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL mutable_address_comment();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& _internal_address_comment() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL _internal_mutable_address_comment();
  public:
  [[deprecated]] const ::BinExport2_Reference& address_comment(int index) const;
  [[deprecated]] ::BinExport2_Reference* PROTOBUF_NONNULL add_address_comment();
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& address_comment() const;
  // repeated .BinExport2.Reference string_reference = 11;
  int string_reference_size() const;
  private:
  int _internal_string_reference_size() const;

  public:
  void clear_string_reference() ;
  ::BinExport2_Reference* PROTOBUF_NONNULL mutable_string_reference(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL mutable_string_reference();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& _internal_string_reference() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL _internal_mutable_string_reference();
  public:
  const ::BinExport2_Reference& string_reference(int index) const;
  ::BinExport2_Reference* PROTOBUF_NONNULL add_string_reference();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& string_reference() const;
  // repeated .BinExport2.Reference expression_substitution = 12;
  int expression_substitution_size() const;
  private:
  int _internal_expression_substitution_size() const;

  public:
  void clear_expression_substitution() ;
  ::BinExport2_Reference* PROTOBUF_NONNULL mutable_expression_substitution(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL mutable_expression_substitution();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& _internal_expression_substitution() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL _internal_mutable_expression_substitution();
  public:
  const ::BinExport2_Reference& expression_substitution(int index) const;
  ::BinExport2_Reference* PROTOBUF_NONNULL add_expression_substitution();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& expression_substitution() const;
  // repeated .BinExport2.Section section = 13;
  int section_size() const;
  private:
  int _internal_section_size() const;

  public:
  void clear_section() ;
  ::BinExport2_Section* PROTOBUF_NONNULL mutable_section(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Section>* PROTOBUF_NONNULL mutable_section();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Section>& _internal_section() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Section>* PROTOBUF_NONNULL _internal_mutable_section();
  public:
  const ::BinExport2_Section& section(int index) const;
  ::BinExport2_Section* PROTOBUF_NONNULL add_section();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Section>& section() const;
  // repeated .BinExport2.Library library = 14;
  int library_size() const;
  private:
  int _internal_library_size() const;

  public:
  void clear_library() ;
  ::BinExport2_Library* PROTOBUF_NONNULL mutable_library(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Library>* PROTOBUF_NONNULL mutable_library();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Library>& _internal_library() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Library>* PROTOBUF_NONNULL _internal_mutable_library();
  public:
  const ::BinExport2_Library& library(int index) const;
  ::BinExport2_Library* PROTOBUF_NONNULL add_library();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Library>& library() const;
  // repeated .BinExport2.DataReference data_reference = 15;
  int data_reference_size() const;
  private:
  int _internal_data_reference_size() const;

  public:
  void clear_data_reference() ;
  ::BinExport2_DataReference* PROTOBUF_NONNULL mutable_data_reference(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_DataReference>* PROTOBUF_NONNULL mutable_data_reference();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_DataReference>& _internal_data_reference() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_DataReference>* PROTOBUF_NONNULL _internal_mutable_data_reference();
  public:
  const ::BinExport2_DataReference& data_reference(int index) const;
  ::BinExport2_DataReference* PROTOBUF_NONNULL add_data_reference();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_DataReference>& data_reference() const;
  // repeated .BinExport2.Module module = 16;
  int module_size() const;
  private:
  int _internal_module_size() const;

  public:
  void clear_module() ;
  ::BinExport2_Module* PROTOBUF_NONNULL mutable_module(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Module>* PROTOBUF_NONNULL mutable_module();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Module>& _internal_module() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Module>* PROTOBUF_NONNULL _internal_mutable_module();
  public:
  const ::BinExport2_Module& module(int index) const;
  ::BinExport2_Module* PROTOBUF_NONNULL add_module();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Module>& module() const;
  // repeated .BinExport2.Comment comment = 17;
  int comment_size() const;
  private:
  int _internal_comment_size() const;

  public:
  void clear_comment() ;
  ::BinExport2_Comment* PROTOBUF_NONNULL mutable_comment(int index);
  ::google::protobuf::RepeatedPtrField<::BinExport2_Comment>* PROTOBUF_NONNULL mutable_comment();

  private:
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Comment>& _internal_comment() const;
  ::google::protobuf::RepeatedPtrField<::BinExport2_Comment>* PROTOBUF_NONNULL _internal_mutable_comment();
  public:
  const ::BinExport2_Comment& comment(int index) const;
  ::BinExport2_Comment* PROTOBUF_NONNULL add_comment();
  const ::google::protobuf::RepeatedPtrField<::BinExport2_Comment>& comment() const;
  // optional .BinExport2.Meta meta_information = 1;
  bool has_meta_information() const;
  void clear_meta_information() ;
  const ::BinExport2_Meta& meta_information() const;
  [[nodiscard]] ::BinExport2_Meta* PROTOBUF_NULLABLE release_meta_information();
  ::BinExport2_Meta* PROTOBUF_NONNULL mutable_meta_information();
  void set_allocated_meta_information(::BinExport2_Meta* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_meta_information(::BinExport2_Meta* PROTOBUF_NULLABLE value);
  ::BinExport2_Meta* PROTOBUF_NULLABLE unsafe_arena_release_meta_information();

  private:
  const ::BinExport2_Meta& _internal_meta_information() const;
  ::BinExport2_Meta* PROTOBUF_NONNULL _internal_mutable_meta_information();

  public:
  // optional .BinExport2.CallGraph call_graph = 8;
  bool has_call_graph() const;
  void clear_call_graph() ;
  const ::BinExport2_CallGraph& call_graph() const;
  [[nodiscard]] ::BinExport2_CallGraph* PROTOBUF_NULLABLE release_call_graph();
  ::BinExport2_CallGraph* PROTOBUF_NONNULL mutable_call_graph();
  void set_allocated_call_graph(::BinExport2_CallGraph* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_call_graph(::BinExport2_CallGraph* PROTOBUF_NULLABLE value);
  ::BinExport2_CallGraph* PROTOBUF_NULLABLE unsafe_arena_release_call_graph();

  private:
  const ::BinExport2_CallGraph& _internal_call_graph() const;
  ::BinExport2_CallGraph* PROTOBUF_NONNULL _internal_mutable_call_graph();

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  [[nodiscard]] inline typename _proto_TypeTraits::Singular::MutableType
  ReleaseExtension(const ::google::protobuf::internal::ExtensionIdentifier<
                   BinExport2, _proto_TypeTraits, _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType* PROTOBUF_NONNULL
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BinExport2, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:BinExport2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 17,
                                   16, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BinExport2& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Expression > expression_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Operand > operand_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Mnemonic > mnemonic_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Instruction > instruction_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_BasicBlock > basic_block_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_FlowGraph > flow_graph_;
    ::google::protobuf::RepeatedPtrField<std::string> string_table_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Reference > address_comment_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Reference > string_reference_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Reference > expression_substitution_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Section > section_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Library > library_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_DataReference > data_reference_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Module > module_;
    ::google::protobuf::RepeatedPtrField< ::BinExport2_Comment > comment_;
    ::BinExport2_Meta* PROTOBUF_NULLABLE meta_information_;
    ::BinExport2_CallGraph* PROTOBUF_NULLABLE call_graph_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binexport2_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BinExport2_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BinExport2_Meta

// optional string executable_name = 1;
inline bool BinExport2_Meta::has_executable_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Meta::clear_executable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executable_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BinExport2_Meta::executable_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.Meta.executable_name)
  return _internal_executable_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_Meta::set_executable_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.executable_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.Meta.executable_name)
}
inline std::string* PROTOBUF_NONNULL BinExport2_Meta::mutable_executable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_executable_name();
  // @@protoc_insertion_point(field_mutable:BinExport2.Meta.executable_name)
  return _s;
}
inline const std::string& BinExport2_Meta::_internal_executable_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.executable_name_.Get();
}
inline void BinExport2_Meta::_internal_set_executable_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.executable_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_Meta::_internal_mutable_executable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.executable_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_Meta::release_executable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.Meta.executable_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.executable_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.executable_name_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_Meta::set_allocated_executable_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.executable_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.executable_name_.IsDefault()) {
    _impl_.executable_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.Meta.executable_name)
}

// optional string executable_id = 2;
inline bool BinExport2_Meta::has_executable_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_Meta::clear_executable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executable_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& BinExport2_Meta::executable_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.Meta.executable_id)
  return _internal_executable_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_Meta::set_executable_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.executable_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.Meta.executable_id)
}
inline std::string* PROTOBUF_NONNULL BinExport2_Meta::mutable_executable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_executable_id();
  // @@protoc_insertion_point(field_mutable:BinExport2.Meta.executable_id)
  return _s;
}
inline const std::string& BinExport2_Meta::_internal_executable_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.executable_id_.Get();
}
inline void BinExport2_Meta::_internal_set_executable_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.executable_id_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_Meta::_internal_mutable_executable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.executable_id_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_Meta::release_executable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.Meta.executable_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.executable_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.executable_id_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_Meta::set_allocated_executable_id(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.executable_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.executable_id_.IsDefault()) {
    _impl_.executable_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.Meta.executable_id)
}

// optional string architecture_name = 3;
inline bool BinExport2_Meta::has_architecture_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_Meta::clear_architecture_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.architecture_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& BinExport2_Meta::architecture_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.Meta.architecture_name)
  return _internal_architecture_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_Meta::set_architecture_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.architecture_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.Meta.architecture_name)
}
inline std::string* PROTOBUF_NONNULL BinExport2_Meta::mutable_architecture_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_architecture_name();
  // @@protoc_insertion_point(field_mutable:BinExport2.Meta.architecture_name)
  return _s;
}
inline const std::string& BinExport2_Meta::_internal_architecture_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.architecture_name_.Get();
}
inline void BinExport2_Meta::_internal_set_architecture_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.architecture_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_Meta::_internal_mutable_architecture_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.architecture_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_Meta::release_architecture_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.Meta.architecture_name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.architecture_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.architecture_name_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_Meta::set_allocated_architecture_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.architecture_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.architecture_name_.IsDefault()) {
    _impl_.architecture_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.Meta.architecture_name)
}

// optional int64 timestamp = 4;
inline bool BinExport2_Meta::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void BinExport2_Meta::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t BinExport2_Meta::timestamp() const {
  // @@protoc_insertion_point(field_get:BinExport2.Meta.timestamp)
  return _internal_timestamp();
}
inline void BinExport2_Meta::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:BinExport2.Meta.timestamp)
}
inline ::int64_t BinExport2_Meta::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void BinExport2_Meta::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// BinExport2_CallGraph_Vertex

// optional uint64 address = 1;
inline bool BinExport2_CallGraph_Vertex::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_CallGraph_Vertex::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t BinExport2_CallGraph_Vertex::address() const {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.Vertex.address)
  return _internal_address();
}
inline void BinExport2_CallGraph_Vertex::set_address(::uint64_t value) {
  _internal_set_address(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:BinExport2.CallGraph.Vertex.address)
}
inline ::uint64_t BinExport2_CallGraph_Vertex::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_;
}
inline void BinExport2_CallGraph_Vertex::_internal_set_address(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_ = value;
}

// optional .BinExport2.CallGraph.Vertex.Type type = 2 [default = NORMAL];
inline bool BinExport2_CallGraph_Vertex::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void BinExport2_CallGraph_Vertex::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::BinExport2_CallGraph_Vertex_Type BinExport2_CallGraph_Vertex::type() const {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.Vertex.type)
  return _internal_type();
}
inline void BinExport2_CallGraph_Vertex::set_type(::BinExport2_CallGraph_Vertex_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:BinExport2.CallGraph.Vertex.type)
}
inline ::BinExport2_CallGraph_Vertex_Type BinExport2_CallGraph_Vertex::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::BinExport2_CallGraph_Vertex_Type>(_impl_.type_);
}
inline void BinExport2_CallGraph_Vertex::_internal_set_type(::BinExport2_CallGraph_Vertex_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::BinExport2_CallGraph_Vertex_Type_internal_data_));
                                          _impl_.type_ = value;
}

// optional string mangled_name = 3;
inline bool BinExport2_CallGraph_Vertex::has_mangled_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_CallGraph_Vertex::clear_mangled_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mangled_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BinExport2_CallGraph_Vertex::mangled_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.Vertex.mangled_name)
  return _internal_mangled_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_CallGraph_Vertex::set_mangled_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.mangled_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.CallGraph.Vertex.mangled_name)
}
inline std::string* PROTOBUF_NONNULL BinExport2_CallGraph_Vertex::mutable_mangled_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mangled_name();
  // @@protoc_insertion_point(field_mutable:BinExport2.CallGraph.Vertex.mangled_name)
  return _s;
}
inline const std::string& BinExport2_CallGraph_Vertex::_internal_mangled_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mangled_name_.Get();
}
inline void BinExport2_CallGraph_Vertex::_internal_set_mangled_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.mangled_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_CallGraph_Vertex::_internal_mutable_mangled_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.mangled_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_CallGraph_Vertex::release_mangled_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.CallGraph.Vertex.mangled_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.mangled_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.mangled_name_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_CallGraph_Vertex::set_allocated_mangled_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.mangled_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mangled_name_.IsDefault()) {
    _impl_.mangled_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.CallGraph.Vertex.mangled_name)
}

// optional string demangled_name = 4;
inline bool BinExport2_CallGraph_Vertex::has_demangled_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_CallGraph_Vertex::clear_demangled_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.demangled_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& BinExport2_CallGraph_Vertex::demangled_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.Vertex.demangled_name)
  return _internal_demangled_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_CallGraph_Vertex::set_demangled_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.demangled_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.CallGraph.Vertex.demangled_name)
}
inline std::string* PROTOBUF_NONNULL BinExport2_CallGraph_Vertex::mutable_demangled_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_demangled_name();
  // @@protoc_insertion_point(field_mutable:BinExport2.CallGraph.Vertex.demangled_name)
  return _s;
}
inline const std::string& BinExport2_CallGraph_Vertex::_internal_demangled_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.demangled_name_.Get();
}
inline void BinExport2_CallGraph_Vertex::_internal_set_demangled_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.demangled_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_CallGraph_Vertex::_internal_mutable_demangled_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.demangled_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_CallGraph_Vertex::release_demangled_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.CallGraph.Vertex.demangled_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.demangled_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.demangled_name_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_CallGraph_Vertex::set_allocated_demangled_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.demangled_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.demangled_name_.IsDefault()) {
    _impl_.demangled_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.CallGraph.Vertex.demangled_name)
}

// optional int32 library_index = 5;
inline bool BinExport2_CallGraph_Vertex::has_library_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void BinExport2_CallGraph_Vertex::clear_library_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.library_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t BinExport2_CallGraph_Vertex::library_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.Vertex.library_index)
  return _internal_library_index();
}
inline void BinExport2_CallGraph_Vertex::set_library_index(::int32_t value) {
  _internal_set_library_index(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:BinExport2.CallGraph.Vertex.library_index)
}
inline ::int32_t BinExport2_CallGraph_Vertex::_internal_library_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.library_index_;
}
inline void BinExport2_CallGraph_Vertex::_internal_set_library_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.library_index_ = value;
}

// optional int32 module_index = 6;
inline bool BinExport2_CallGraph_Vertex::has_module_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void BinExport2_CallGraph_Vertex::clear_module_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t BinExport2_CallGraph_Vertex::module_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.Vertex.module_index)
  return _internal_module_index();
}
inline void BinExport2_CallGraph_Vertex::set_module_index(::int32_t value) {
  _internal_set_module_index(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:BinExport2.CallGraph.Vertex.module_index)
}
inline ::int32_t BinExport2_CallGraph_Vertex::_internal_module_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_index_;
}
inline void BinExport2_CallGraph_Vertex::_internal_set_module_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_index_ = value;
}

// -------------------------------------------------------------------

// BinExport2_CallGraph_Edge

// optional int32 source_vertex_index = 1;
inline bool BinExport2_CallGraph_Edge::has_source_vertex_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_CallGraph_Edge::clear_source_vertex_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_vertex_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t BinExport2_CallGraph_Edge::source_vertex_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.Edge.source_vertex_index)
  return _internal_source_vertex_index();
}
inline void BinExport2_CallGraph_Edge::set_source_vertex_index(::int32_t value) {
  _internal_set_source_vertex_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:BinExport2.CallGraph.Edge.source_vertex_index)
}
inline ::int32_t BinExport2_CallGraph_Edge::_internal_source_vertex_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_vertex_index_;
}
inline void BinExport2_CallGraph_Edge::_internal_set_source_vertex_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_vertex_index_ = value;
}

// optional int32 target_vertex_index = 2;
inline bool BinExport2_CallGraph_Edge::has_target_vertex_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_CallGraph_Edge::clear_target_vertex_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_vertex_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t BinExport2_CallGraph_Edge::target_vertex_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.Edge.target_vertex_index)
  return _internal_target_vertex_index();
}
inline void BinExport2_CallGraph_Edge::set_target_vertex_index(::int32_t value) {
  _internal_set_target_vertex_index(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.CallGraph.Edge.target_vertex_index)
}
inline ::int32_t BinExport2_CallGraph_Edge::_internal_target_vertex_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_vertex_index_;
}
inline void BinExport2_CallGraph_Edge::_internal_set_target_vertex_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_vertex_index_ = value;
}

// -------------------------------------------------------------------

// BinExport2_CallGraph

// repeated .BinExport2.CallGraph.Vertex vertex = 1;
inline int BinExport2_CallGraph::_internal_vertex_size() const {
  return _internal_vertex().size();
}
inline int BinExport2_CallGraph::vertex_size() const {
  return _internal_vertex_size();
}
inline void BinExport2_CallGraph::clear_vertex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertex_.Clear();
}
inline ::BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL BinExport2_CallGraph::mutable_vertex(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.CallGraph.vertex)
  return _internal_mutable_vertex()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Vertex>* PROTOBUF_NONNULL BinExport2_CallGraph::mutable_vertex()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.CallGraph.vertex)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vertex();
}
inline const ::BinExport2_CallGraph_Vertex& BinExport2_CallGraph::vertex(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.vertex)
  return _internal_vertex().Get(index);
}
inline ::BinExport2_CallGraph_Vertex* PROTOBUF_NONNULL BinExport2_CallGraph::add_vertex()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_CallGraph_Vertex* _add = _internal_mutable_vertex()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.CallGraph.vertex)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Vertex>& BinExport2_CallGraph::vertex() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.CallGraph.vertex)
  return _internal_vertex();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Vertex>&
BinExport2_CallGraph::_internal_vertex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vertex_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Vertex>* PROTOBUF_NONNULL
BinExport2_CallGraph::_internal_mutable_vertex() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vertex_;
}

// repeated .BinExport2.CallGraph.Edge edge = 2;
inline int BinExport2_CallGraph::_internal_edge_size() const {
  return _internal_edge().size();
}
inline int BinExport2_CallGraph::edge_size() const {
  return _internal_edge_size();
}
inline void BinExport2_CallGraph::clear_edge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_.Clear();
}
inline ::BinExport2_CallGraph_Edge* PROTOBUF_NONNULL BinExport2_CallGraph::mutable_edge(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.CallGraph.edge)
  return _internal_mutable_edge()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Edge>* PROTOBUF_NONNULL BinExport2_CallGraph::mutable_edge()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.CallGraph.edge)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_edge();
}
inline const ::BinExport2_CallGraph_Edge& BinExport2_CallGraph::edge(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.CallGraph.edge)
  return _internal_edge().Get(index);
}
inline ::BinExport2_CallGraph_Edge* PROTOBUF_NONNULL BinExport2_CallGraph::add_edge()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_CallGraph_Edge* _add = _internal_mutable_edge()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.CallGraph.edge)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Edge>& BinExport2_CallGraph::edge() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.CallGraph.edge)
  return _internal_edge();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Edge>&
BinExport2_CallGraph::_internal_edge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.edge_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_CallGraph_Edge>* PROTOBUF_NONNULL
BinExport2_CallGraph::_internal_mutable_edge() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.edge_;
}

// -------------------------------------------------------------------

// BinExport2_Expression

// optional .BinExport2.Expression.Type type = 1 [default = IMMEDIATE_INT];
inline bool BinExport2_Expression::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void BinExport2_Expression::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 2;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::BinExport2_Expression_Type BinExport2_Expression::type() const {
  // @@protoc_insertion_point(field_get:BinExport2.Expression.type)
  return _internal_type();
}
inline void BinExport2_Expression::set_type(::BinExport2_Expression_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:BinExport2.Expression.type)
}
inline ::BinExport2_Expression_Type BinExport2_Expression::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::BinExport2_Expression_Type>(_impl_.type_);
}
inline void BinExport2_Expression::_internal_set_type(::BinExport2_Expression_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::BinExport2_Expression_Type_internal_data_));
                                          _impl_.type_ = value;
}

// optional string symbol = 2;
inline bool BinExport2_Expression::has_symbol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Expression::clear_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BinExport2_Expression::symbol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.Expression.symbol)
  return _internal_symbol();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_Expression::set_symbol(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.symbol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.Expression.symbol)
}
inline std::string* PROTOBUF_NONNULL BinExport2_Expression::mutable_symbol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_symbol();
  // @@protoc_insertion_point(field_mutable:BinExport2.Expression.symbol)
  return _s;
}
inline const std::string& BinExport2_Expression::_internal_symbol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbol_.Get();
}
inline void BinExport2_Expression::_internal_set_symbol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.symbol_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_Expression::_internal_mutable_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.symbol_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_Expression::release_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.Expression.symbol)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.symbol_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.symbol_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_Expression::set_allocated_symbol(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.symbol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.symbol_.IsDefault()) {
    _impl_.symbol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.Expression.symbol)
}

// optional uint64 immediate = 3;
inline bool BinExport2_Expression::has_immediate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_Expression::clear_immediate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immediate_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t BinExport2_Expression::immediate() const {
  // @@protoc_insertion_point(field_get:BinExport2.Expression.immediate)
  return _internal_immediate();
}
inline void BinExport2_Expression::set_immediate(::uint64_t value) {
  _internal_set_immediate(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.Expression.immediate)
}
inline ::uint64_t BinExport2_Expression::_internal_immediate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immediate_;
}
inline void BinExport2_Expression::_internal_set_immediate(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immediate_ = value;
}

// optional int32 parent_index = 4;
inline bool BinExport2_Expression::has_parent_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_Expression::clear_parent_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t BinExport2_Expression::parent_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Expression.parent_index)
  return _internal_parent_index();
}
inline void BinExport2_Expression::set_parent_index(::int32_t value) {
  _internal_set_parent_index(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:BinExport2.Expression.parent_index)
}
inline ::int32_t BinExport2_Expression::_internal_parent_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parent_index_;
}
inline void BinExport2_Expression::_internal_set_parent_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_index_ = value;
}

// optional bool is_relocation = 5;
inline bool BinExport2_Expression::has_is_relocation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void BinExport2_Expression::clear_is_relocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_relocation_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool BinExport2_Expression::is_relocation() const {
  // @@protoc_insertion_point(field_get:BinExport2.Expression.is_relocation)
  return _internal_is_relocation();
}
inline void BinExport2_Expression::set_is_relocation(bool value) {
  _internal_set_is_relocation(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:BinExport2.Expression.is_relocation)
}
inline bool BinExport2_Expression::_internal_is_relocation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_relocation_;
}
inline void BinExport2_Expression::_internal_set_is_relocation(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_relocation_ = value;
}

// -------------------------------------------------------------------

// BinExport2_Operand

// repeated int32 expression_index = 1;
inline int BinExport2_Operand::_internal_expression_index_size() const {
  return _internal_expression_index().size();
}
inline int BinExport2_Operand::expression_index_size() const {
  return _internal_expression_index_size();
}
inline void BinExport2_Operand::clear_expression_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expression_index_.Clear();
}
inline ::int32_t BinExport2_Operand::expression_index(int index) const {
  // @@protoc_insertion_point(field_get:BinExport2.Operand.expression_index)
  return _internal_expression_index().Get(index);
}
inline void BinExport2_Operand::set_expression_index(int index, ::int32_t value) {
  _internal_mutable_expression_index()->Set(index, value);
  // @@protoc_insertion_point(field_set:BinExport2.Operand.expression_index)
}
inline void BinExport2_Operand::add_expression_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_expression_index()->Add(value);
  // @@protoc_insertion_point(field_add:BinExport2.Operand.expression_index)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BinExport2_Operand::expression_index() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.Operand.expression_index)
  return _internal_expression_index();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL BinExport2_Operand::mutable_expression_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.Operand.expression_index)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_expression_index();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
BinExport2_Operand::_internal_expression_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expression_index_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
BinExport2_Operand::_internal_mutable_expression_index() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.expression_index_;
}

// -------------------------------------------------------------------

// BinExport2_Mnemonic

// optional string name = 1;
inline bool BinExport2_Mnemonic::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Mnemonic::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BinExport2_Mnemonic::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.Mnemonic.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_Mnemonic::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.Mnemonic.name)
}
inline std::string* PROTOBUF_NONNULL BinExport2_Mnemonic::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:BinExport2.Mnemonic.name)
  return _s;
}
inline const std::string& BinExport2_Mnemonic::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void BinExport2_Mnemonic::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_Mnemonic::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_Mnemonic::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.Mnemonic.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_Mnemonic::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.Mnemonic.name)
}

// -------------------------------------------------------------------

// BinExport2_Instruction

// optional uint64 address = 1;
inline bool BinExport2_Instruction::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_Instruction::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t BinExport2_Instruction::address() const {
  // @@protoc_insertion_point(field_get:BinExport2.Instruction.address)
  return _internal_address();
}
inline void BinExport2_Instruction::set_address(::uint64_t value) {
  _internal_set_address(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.Instruction.address)
}
inline ::uint64_t BinExport2_Instruction::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_;
}
inline void BinExport2_Instruction::_internal_set_address(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_ = value;
}

// repeated uint64 call_target = 2;
inline int BinExport2_Instruction::_internal_call_target_size() const {
  return _internal_call_target().size();
}
inline int BinExport2_Instruction::call_target_size() const {
  return _internal_call_target_size();
}
inline void BinExport2_Instruction::clear_call_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.call_target_.Clear();
}
inline ::uint64_t BinExport2_Instruction::call_target(int index) const {
  // @@protoc_insertion_point(field_get:BinExport2.Instruction.call_target)
  return _internal_call_target().Get(index);
}
inline void BinExport2_Instruction::set_call_target(int index, ::uint64_t value) {
  _internal_mutable_call_target()->Set(index, value);
  // @@protoc_insertion_point(field_set:BinExport2.Instruction.call_target)
}
inline void BinExport2_Instruction::add_call_target(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_call_target()->Add(value);
  // @@protoc_insertion_point(field_add:BinExport2.Instruction.call_target)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& BinExport2_Instruction::call_target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.Instruction.call_target)
  return _internal_call_target();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL BinExport2_Instruction::mutable_call_target()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.Instruction.call_target)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_call_target();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
BinExport2_Instruction::_internal_call_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.call_target_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL
BinExport2_Instruction::_internal_mutable_call_target() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.call_target_;
}

// optional int32 mnemonic_index = 3 [default = 0];
inline bool BinExport2_Instruction::has_mnemonic_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_Instruction::clear_mnemonic_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnemonic_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t BinExport2_Instruction::mnemonic_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Instruction.mnemonic_index)
  return _internal_mnemonic_index();
}
inline void BinExport2_Instruction::set_mnemonic_index(::int32_t value) {
  _internal_set_mnemonic_index(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:BinExport2.Instruction.mnemonic_index)
}
inline ::int32_t BinExport2_Instruction::_internal_mnemonic_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mnemonic_index_;
}
inline void BinExport2_Instruction::_internal_set_mnemonic_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnemonic_index_ = value;
}

// repeated int32 operand_index = 4;
inline int BinExport2_Instruction::_internal_operand_index_size() const {
  return _internal_operand_index().size();
}
inline int BinExport2_Instruction::operand_index_size() const {
  return _internal_operand_index_size();
}
inline void BinExport2_Instruction::clear_operand_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operand_index_.Clear();
}
inline ::int32_t BinExport2_Instruction::operand_index(int index) const {
  // @@protoc_insertion_point(field_get:BinExport2.Instruction.operand_index)
  return _internal_operand_index().Get(index);
}
inline void BinExport2_Instruction::set_operand_index(int index, ::int32_t value) {
  _internal_mutable_operand_index()->Set(index, value);
  // @@protoc_insertion_point(field_set:BinExport2.Instruction.operand_index)
}
inline void BinExport2_Instruction::add_operand_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_operand_index()->Add(value);
  // @@protoc_insertion_point(field_add:BinExport2.Instruction.operand_index)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BinExport2_Instruction::operand_index() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.Instruction.operand_index)
  return _internal_operand_index();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL BinExport2_Instruction::mutable_operand_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.Instruction.operand_index)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_operand_index();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
BinExport2_Instruction::_internal_operand_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.operand_index_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
BinExport2_Instruction::_internal_mutable_operand_index() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.operand_index_;
}

// optional bytes raw_bytes = 5;
inline bool BinExport2_Instruction::has_raw_bytes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Instruction::clear_raw_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_bytes_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BinExport2_Instruction::raw_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.Instruction.raw_bytes)
  return _internal_raw_bytes();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_Instruction::set_raw_bytes(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.raw_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.Instruction.raw_bytes)
}
inline std::string* PROTOBUF_NONNULL BinExport2_Instruction::mutable_raw_bytes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_bytes();
  // @@protoc_insertion_point(field_mutable:BinExport2.Instruction.raw_bytes)
  return _s;
}
inline const std::string& BinExport2_Instruction::_internal_raw_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_bytes_.Get();
}
inline void BinExport2_Instruction::_internal_set_raw_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.raw_bytes_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_Instruction::_internal_mutable_raw_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.raw_bytes_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_Instruction::release_raw_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.Instruction.raw_bytes)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.raw_bytes_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.raw_bytes_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_Instruction::set_allocated_raw_bytes(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.raw_bytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.raw_bytes_.IsDefault()) {
    _impl_.raw_bytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.Instruction.raw_bytes)
}

// repeated int32 comment_index = 6;
inline int BinExport2_Instruction::_internal_comment_index_size() const {
  return _internal_comment_index().size();
}
inline int BinExport2_Instruction::comment_index_size() const {
  return _internal_comment_index_size();
}
inline void BinExport2_Instruction::clear_comment_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_index_.Clear();
}
inline ::int32_t BinExport2_Instruction::comment_index(int index) const {
  // @@protoc_insertion_point(field_get:BinExport2.Instruction.comment_index)
  return _internal_comment_index().Get(index);
}
inline void BinExport2_Instruction::set_comment_index(int index, ::int32_t value) {
  _internal_mutable_comment_index()->Set(index, value);
  // @@protoc_insertion_point(field_set:BinExport2.Instruction.comment_index)
}
inline void BinExport2_Instruction::add_comment_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_comment_index()->Add(value);
  // @@protoc_insertion_point(field_add:BinExport2.Instruction.comment_index)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BinExport2_Instruction::comment_index() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.Instruction.comment_index)
  return _internal_comment_index();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL BinExport2_Instruction::mutable_comment_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.Instruction.comment_index)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_comment_index();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
BinExport2_Instruction::_internal_comment_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_index_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
BinExport2_Instruction::_internal_mutable_comment_index() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.comment_index_;
}

// -------------------------------------------------------------------

// BinExport2_BasicBlock_IndexRange

// optional int32 begin_index = 1;
inline bool BinExport2_BasicBlock_IndexRange::has_begin_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_BasicBlock_IndexRange::clear_begin_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begin_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t BinExport2_BasicBlock_IndexRange::begin_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.BasicBlock.IndexRange.begin_index)
  return _internal_begin_index();
}
inline void BinExport2_BasicBlock_IndexRange::set_begin_index(::int32_t value) {
  _internal_set_begin_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:BinExport2.BasicBlock.IndexRange.begin_index)
}
inline ::int32_t BinExport2_BasicBlock_IndexRange::_internal_begin_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.begin_index_;
}
inline void BinExport2_BasicBlock_IndexRange::_internal_set_begin_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begin_index_ = value;
}

// optional int32 end_index = 2;
inline bool BinExport2_BasicBlock_IndexRange::has_end_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_BasicBlock_IndexRange::clear_end_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t BinExport2_BasicBlock_IndexRange::end_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.BasicBlock.IndexRange.end_index)
  return _internal_end_index();
}
inline void BinExport2_BasicBlock_IndexRange::set_end_index(::int32_t value) {
  _internal_set_end_index(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.BasicBlock.IndexRange.end_index)
}
inline ::int32_t BinExport2_BasicBlock_IndexRange::_internal_end_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_index_;
}
inline void BinExport2_BasicBlock_IndexRange::_internal_set_end_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_index_ = value;
}

// -------------------------------------------------------------------

// BinExport2_BasicBlock

// repeated .BinExport2.BasicBlock.IndexRange instruction_index = 1;
inline int BinExport2_BasicBlock::_internal_instruction_index_size() const {
  return _internal_instruction_index().size();
}
inline int BinExport2_BasicBlock::instruction_index_size() const {
  return _internal_instruction_index_size();
}
inline void BinExport2_BasicBlock::clear_instruction_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_index_.Clear();
}
inline ::BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL BinExport2_BasicBlock::mutable_instruction_index(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.BasicBlock.instruction_index)
  return _internal_mutable_instruction_index()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock_IndexRange>* PROTOBUF_NONNULL BinExport2_BasicBlock::mutable_instruction_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.BasicBlock.instruction_index)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_instruction_index();
}
inline const ::BinExport2_BasicBlock_IndexRange& BinExport2_BasicBlock::instruction_index(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.BasicBlock.instruction_index)
  return _internal_instruction_index().Get(index);
}
inline ::BinExport2_BasicBlock_IndexRange* PROTOBUF_NONNULL BinExport2_BasicBlock::add_instruction_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_BasicBlock_IndexRange* _add = _internal_mutable_instruction_index()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.BasicBlock.instruction_index)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock_IndexRange>& BinExport2_BasicBlock::instruction_index() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.BasicBlock.instruction_index)
  return _internal_instruction_index();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock_IndexRange>&
BinExport2_BasicBlock::_internal_instruction_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instruction_index_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock_IndexRange>* PROTOBUF_NONNULL
BinExport2_BasicBlock::_internal_mutable_instruction_index() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.instruction_index_;
}

// -------------------------------------------------------------------

// BinExport2_FlowGraph_Edge

// optional int32 source_basic_block_index = 1;
inline bool BinExport2_FlowGraph_Edge::has_source_basic_block_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_FlowGraph_Edge::clear_source_basic_block_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_basic_block_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t BinExport2_FlowGraph_Edge::source_basic_block_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.FlowGraph.Edge.source_basic_block_index)
  return _internal_source_basic_block_index();
}
inline void BinExport2_FlowGraph_Edge::set_source_basic_block_index(::int32_t value) {
  _internal_set_source_basic_block_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:BinExport2.FlowGraph.Edge.source_basic_block_index)
}
inline ::int32_t BinExport2_FlowGraph_Edge::_internal_source_basic_block_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_basic_block_index_;
}
inline void BinExport2_FlowGraph_Edge::_internal_set_source_basic_block_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_basic_block_index_ = value;
}

// optional int32 target_basic_block_index = 2;
inline bool BinExport2_FlowGraph_Edge::has_target_basic_block_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_FlowGraph_Edge::clear_target_basic_block_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_basic_block_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t BinExport2_FlowGraph_Edge::target_basic_block_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.FlowGraph.Edge.target_basic_block_index)
  return _internal_target_basic_block_index();
}
inline void BinExport2_FlowGraph_Edge::set_target_basic_block_index(::int32_t value) {
  _internal_set_target_basic_block_index(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.FlowGraph.Edge.target_basic_block_index)
}
inline ::int32_t BinExport2_FlowGraph_Edge::_internal_target_basic_block_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_basic_block_index_;
}
inline void BinExport2_FlowGraph_Edge::_internal_set_target_basic_block_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_basic_block_index_ = value;
}

// optional .BinExport2.FlowGraph.Edge.Type type = 3 [default = UNCONDITIONAL];
inline bool BinExport2_FlowGraph_Edge::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void BinExport2_FlowGraph_Edge::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 3;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::BinExport2_FlowGraph_Edge_Type BinExport2_FlowGraph_Edge::type() const {
  // @@protoc_insertion_point(field_get:BinExport2.FlowGraph.Edge.type)
  return _internal_type();
}
inline void BinExport2_FlowGraph_Edge::set_type(::BinExport2_FlowGraph_Edge_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:BinExport2.FlowGraph.Edge.type)
}
inline ::BinExport2_FlowGraph_Edge_Type BinExport2_FlowGraph_Edge::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::BinExport2_FlowGraph_Edge_Type>(_impl_.type_);
}
inline void BinExport2_FlowGraph_Edge::_internal_set_type(::BinExport2_FlowGraph_Edge_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::BinExport2_FlowGraph_Edge_Type_internal_data_));
                                          _impl_.type_ = value;
}

// optional bool is_back_edge = 4 [default = false];
inline bool BinExport2_FlowGraph_Edge::has_is_back_edge() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_FlowGraph_Edge::clear_is_back_edge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_back_edge_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool BinExport2_FlowGraph_Edge::is_back_edge() const {
  // @@protoc_insertion_point(field_get:BinExport2.FlowGraph.Edge.is_back_edge)
  return _internal_is_back_edge();
}
inline void BinExport2_FlowGraph_Edge::set_is_back_edge(bool value) {
  _internal_set_is_back_edge(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:BinExport2.FlowGraph.Edge.is_back_edge)
}
inline bool BinExport2_FlowGraph_Edge::_internal_is_back_edge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_back_edge_;
}
inline void BinExport2_FlowGraph_Edge::_internal_set_is_back_edge(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_back_edge_ = value;
}

// -------------------------------------------------------------------

// BinExport2_FlowGraph

// repeated int32 basic_block_index = 1;
inline int BinExport2_FlowGraph::_internal_basic_block_index_size() const {
  return _internal_basic_block_index().size();
}
inline int BinExport2_FlowGraph::basic_block_index_size() const {
  return _internal_basic_block_index_size();
}
inline void BinExport2_FlowGraph::clear_basic_block_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.basic_block_index_.Clear();
}
inline ::int32_t BinExport2_FlowGraph::basic_block_index(int index) const {
  // @@protoc_insertion_point(field_get:BinExport2.FlowGraph.basic_block_index)
  return _internal_basic_block_index().Get(index);
}
inline void BinExport2_FlowGraph::set_basic_block_index(int index, ::int32_t value) {
  _internal_mutable_basic_block_index()->Set(index, value);
  // @@protoc_insertion_point(field_set:BinExport2.FlowGraph.basic_block_index)
}
inline void BinExport2_FlowGraph::add_basic_block_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_basic_block_index()->Add(value);
  // @@protoc_insertion_point(field_add:BinExport2.FlowGraph.basic_block_index)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BinExport2_FlowGraph::basic_block_index() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.FlowGraph.basic_block_index)
  return _internal_basic_block_index();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL BinExport2_FlowGraph::mutable_basic_block_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.FlowGraph.basic_block_index)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_basic_block_index();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
BinExport2_FlowGraph::_internal_basic_block_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.basic_block_index_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
BinExport2_FlowGraph::_internal_mutable_basic_block_index() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.basic_block_index_;
}

// optional int32 entry_basic_block_index = 3;
inline bool BinExport2_FlowGraph::has_entry_basic_block_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_FlowGraph::clear_entry_basic_block_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_basic_block_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t BinExport2_FlowGraph::entry_basic_block_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.FlowGraph.entry_basic_block_index)
  return _internal_entry_basic_block_index();
}
inline void BinExport2_FlowGraph::set_entry_basic_block_index(::int32_t value) {
  _internal_set_entry_basic_block_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:BinExport2.FlowGraph.entry_basic_block_index)
}
inline ::int32_t BinExport2_FlowGraph::_internal_entry_basic_block_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_basic_block_index_;
}
inline void BinExport2_FlowGraph::_internal_set_entry_basic_block_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_basic_block_index_ = value;
}

// repeated .BinExport2.FlowGraph.Edge edge = 2;
inline int BinExport2_FlowGraph::_internal_edge_size() const {
  return _internal_edge().size();
}
inline int BinExport2_FlowGraph::edge_size() const {
  return _internal_edge_size();
}
inline void BinExport2_FlowGraph::clear_edge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_.Clear();
}
inline ::BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL BinExport2_FlowGraph::mutable_edge(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.FlowGraph.edge)
  return _internal_mutable_edge()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph_Edge>* PROTOBUF_NONNULL BinExport2_FlowGraph::mutable_edge()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.FlowGraph.edge)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_edge();
}
inline const ::BinExport2_FlowGraph_Edge& BinExport2_FlowGraph::edge(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.FlowGraph.edge)
  return _internal_edge().Get(index);
}
inline ::BinExport2_FlowGraph_Edge* PROTOBUF_NONNULL BinExport2_FlowGraph::add_edge()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_FlowGraph_Edge* _add = _internal_mutable_edge()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.FlowGraph.edge)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph_Edge>& BinExport2_FlowGraph::edge() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.FlowGraph.edge)
  return _internal_edge();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph_Edge>&
BinExport2_FlowGraph::_internal_edge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.edge_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph_Edge>* PROTOBUF_NONNULL
BinExport2_FlowGraph::_internal_mutable_edge() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.edge_;
}

// -------------------------------------------------------------------

// BinExport2_Reference

// optional int32 instruction_index = 1;
inline bool BinExport2_Reference::has_instruction_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Reference::clear_instruction_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t BinExport2_Reference::instruction_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Reference.instruction_index)
  return _internal_instruction_index();
}
inline void BinExport2_Reference::set_instruction_index(::int32_t value) {
  _internal_set_instruction_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:BinExport2.Reference.instruction_index)
}
inline ::int32_t BinExport2_Reference::_internal_instruction_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instruction_index_;
}
inline void BinExport2_Reference::_internal_set_instruction_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_index_ = value;
}

// optional int32 instruction_operand_index = 2 [default = 0];
inline bool BinExport2_Reference::has_instruction_operand_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_Reference::clear_instruction_operand_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_operand_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t BinExport2_Reference::instruction_operand_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Reference.instruction_operand_index)
  return _internal_instruction_operand_index();
}
inline void BinExport2_Reference::set_instruction_operand_index(::int32_t value) {
  _internal_set_instruction_operand_index(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.Reference.instruction_operand_index)
}
inline ::int32_t BinExport2_Reference::_internal_instruction_operand_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instruction_operand_index_;
}
inline void BinExport2_Reference::_internal_set_instruction_operand_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_operand_index_ = value;
}

// optional int32 operand_expression_index = 3 [default = 0];
inline bool BinExport2_Reference::has_operand_expression_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_Reference::clear_operand_expression_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operand_expression_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t BinExport2_Reference::operand_expression_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Reference.operand_expression_index)
  return _internal_operand_expression_index();
}
inline void BinExport2_Reference::set_operand_expression_index(::int32_t value) {
  _internal_set_operand_expression_index(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:BinExport2.Reference.operand_expression_index)
}
inline ::int32_t BinExport2_Reference::_internal_operand_expression_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.operand_expression_index_;
}
inline void BinExport2_Reference::_internal_set_operand_expression_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operand_expression_index_ = value;
}

// optional int32 string_table_index = 4;
inline bool BinExport2_Reference::has_string_table_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void BinExport2_Reference::clear_string_table_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_table_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t BinExport2_Reference::string_table_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Reference.string_table_index)
  return _internal_string_table_index();
}
inline void BinExport2_Reference::set_string_table_index(::int32_t value) {
  _internal_set_string_table_index(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:BinExport2.Reference.string_table_index)
}
inline ::int32_t BinExport2_Reference::_internal_string_table_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_table_index_;
}
inline void BinExport2_Reference::_internal_set_string_table_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_table_index_ = value;
}

// -------------------------------------------------------------------

// BinExport2_DataReference

// optional int32 instruction_index = 1;
inline bool BinExport2_DataReference::has_instruction_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_DataReference::clear_instruction_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t BinExport2_DataReference::instruction_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.DataReference.instruction_index)
  return _internal_instruction_index();
}
inline void BinExport2_DataReference::set_instruction_index(::int32_t value) {
  _internal_set_instruction_index(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.DataReference.instruction_index)
}
inline ::int32_t BinExport2_DataReference::_internal_instruction_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instruction_index_;
}
inline void BinExport2_DataReference::_internal_set_instruction_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_index_ = value;
}

// optional uint64 address = 2;
inline bool BinExport2_DataReference::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_DataReference::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t BinExport2_DataReference::address() const {
  // @@protoc_insertion_point(field_get:BinExport2.DataReference.address)
  return _internal_address();
}
inline void BinExport2_DataReference::set_address(::uint64_t value) {
  _internal_set_address(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:BinExport2.DataReference.address)
}
inline ::uint64_t BinExport2_DataReference::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_;
}
inline void BinExport2_DataReference::_internal_set_address(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_ = value;
}

// -------------------------------------------------------------------

// BinExport2_Comment

// optional int32 instruction_index = 1;
inline bool BinExport2_Comment::has_instruction_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Comment::clear_instruction_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t BinExport2_Comment::instruction_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Comment.instruction_index)
  return _internal_instruction_index();
}
inline void BinExport2_Comment::set_instruction_index(::int32_t value) {
  _internal_set_instruction_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:BinExport2.Comment.instruction_index)
}
inline ::int32_t BinExport2_Comment::_internal_instruction_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instruction_index_;
}
inline void BinExport2_Comment::_internal_set_instruction_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_index_ = value;
}

// optional int32 instruction_operand_index = 2 [default = 0];
inline bool BinExport2_Comment::has_instruction_operand_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_Comment::clear_instruction_operand_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_operand_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t BinExport2_Comment::instruction_operand_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Comment.instruction_operand_index)
  return _internal_instruction_operand_index();
}
inline void BinExport2_Comment::set_instruction_operand_index(::int32_t value) {
  _internal_set_instruction_operand_index(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.Comment.instruction_operand_index)
}
inline ::int32_t BinExport2_Comment::_internal_instruction_operand_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instruction_operand_index_;
}
inline void BinExport2_Comment::_internal_set_instruction_operand_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_operand_index_ = value;
}

// optional int32 operand_expression_index = 3 [default = 0];
inline bool BinExport2_Comment::has_operand_expression_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_Comment::clear_operand_expression_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operand_expression_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t BinExport2_Comment::operand_expression_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Comment.operand_expression_index)
  return _internal_operand_expression_index();
}
inline void BinExport2_Comment::set_operand_expression_index(::int32_t value) {
  _internal_set_operand_expression_index(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:BinExport2.Comment.operand_expression_index)
}
inline ::int32_t BinExport2_Comment::_internal_operand_expression_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.operand_expression_index_;
}
inline void BinExport2_Comment::_internal_set_operand_expression_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operand_expression_index_ = value;
}

// optional int32 string_table_index = 4;
inline bool BinExport2_Comment::has_string_table_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void BinExport2_Comment::clear_string_table_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_table_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t BinExport2_Comment::string_table_index() const {
  // @@protoc_insertion_point(field_get:BinExport2.Comment.string_table_index)
  return _internal_string_table_index();
}
inline void BinExport2_Comment::set_string_table_index(::int32_t value) {
  _internal_set_string_table_index(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:BinExport2.Comment.string_table_index)
}
inline ::int32_t BinExport2_Comment::_internal_string_table_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_table_index_;
}
inline void BinExport2_Comment::_internal_set_string_table_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_table_index_ = value;
}

// optional bool repeatable = 5;
inline bool BinExport2_Comment::has_repeatable() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void BinExport2_Comment::clear_repeatable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatable_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool BinExport2_Comment::repeatable() const {
  // @@protoc_insertion_point(field_get:BinExport2.Comment.repeatable)
  return _internal_repeatable();
}
inline void BinExport2_Comment::set_repeatable(bool value) {
  _internal_set_repeatable(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:BinExport2.Comment.repeatable)
}
inline bool BinExport2_Comment::_internal_repeatable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatable_;
}
inline void BinExport2_Comment::_internal_set_repeatable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatable_ = value;
}

// optional .BinExport2.Comment.Type type = 6 [default = DEFAULT];
inline bool BinExport2_Comment::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void BinExport2_Comment::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::BinExport2_Comment_Type BinExport2_Comment::type() const {
  // @@protoc_insertion_point(field_get:BinExport2.Comment.type)
  return _internal_type();
}
inline void BinExport2_Comment::set_type(::BinExport2_Comment_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:BinExport2.Comment.type)
}
inline ::BinExport2_Comment_Type BinExport2_Comment::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::BinExport2_Comment_Type>(_impl_.type_);
}
inline void BinExport2_Comment::_internal_set_type(::BinExport2_Comment_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::BinExport2_Comment_Type_internal_data_));
                                          _impl_.type_ = value;
}

// -------------------------------------------------------------------

// BinExport2_Section

// optional uint64 address = 1;
inline bool BinExport2_Section::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Section::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t BinExport2_Section::address() const {
  // @@protoc_insertion_point(field_get:BinExport2.Section.address)
  return _internal_address();
}
inline void BinExport2_Section::set_address(::uint64_t value) {
  _internal_set_address(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:BinExport2.Section.address)
}
inline ::uint64_t BinExport2_Section::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_;
}
inline void BinExport2_Section::_internal_set_address(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_ = value;
}

// optional uint64 size = 2;
inline bool BinExport2_Section::has_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_Section::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t BinExport2_Section::size() const {
  // @@protoc_insertion_point(field_get:BinExport2.Section.size)
  return _internal_size();
}
inline void BinExport2_Section::set_size(::uint64_t value) {
  _internal_set_size(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.Section.size)
}
inline ::uint64_t BinExport2_Section::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_;
}
inline void BinExport2_Section::_internal_set_size(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = value;
}

// optional bool flag_r = 3;
inline bool BinExport2_Section::has_flag_r() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_Section::clear_flag_r() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_r_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool BinExport2_Section::flag_r() const {
  // @@protoc_insertion_point(field_get:BinExport2.Section.flag_r)
  return _internal_flag_r();
}
inline void BinExport2_Section::set_flag_r(bool value) {
  _internal_set_flag_r(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:BinExport2.Section.flag_r)
}
inline bool BinExport2_Section::_internal_flag_r() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flag_r_;
}
inline void BinExport2_Section::_internal_set_flag_r(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_r_ = value;
}

// optional bool flag_w = 4;
inline bool BinExport2_Section::has_flag_w() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void BinExport2_Section::clear_flag_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_w_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool BinExport2_Section::flag_w() const {
  // @@protoc_insertion_point(field_get:BinExport2.Section.flag_w)
  return _internal_flag_w();
}
inline void BinExport2_Section::set_flag_w(bool value) {
  _internal_set_flag_w(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:BinExport2.Section.flag_w)
}
inline bool BinExport2_Section::_internal_flag_w() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flag_w_;
}
inline void BinExport2_Section::_internal_set_flag_w(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_w_ = value;
}

// optional bool flag_x = 5;
inline bool BinExport2_Section::has_flag_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void BinExport2_Section::clear_flag_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_x_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool BinExport2_Section::flag_x() const {
  // @@protoc_insertion_point(field_get:BinExport2.Section.flag_x)
  return _internal_flag_x();
}
inline void BinExport2_Section::set_flag_x(bool value) {
  _internal_set_flag_x(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:BinExport2.Section.flag_x)
}
inline bool BinExport2_Section::_internal_flag_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flag_x_;
}
inline void BinExport2_Section::_internal_set_flag_x(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_x_ = value;
}

// -------------------------------------------------------------------

// BinExport2_Library

// optional bool is_static = 1;
inline bool BinExport2_Library::has_is_static() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BinExport2_Library::clear_is_static() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_static_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool BinExport2_Library::is_static() const {
  // @@protoc_insertion_point(field_get:BinExport2.Library.is_static)
  return _internal_is_static();
}
inline void BinExport2_Library::set_is_static(bool value) {
  _internal_set_is_static(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:BinExport2.Library.is_static)
}
inline bool BinExport2_Library::_internal_is_static() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_static_;
}
inline void BinExport2_Library::_internal_set_is_static(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_static_ = value;
}

// optional uint64 load_address = 2 [default = 0];
inline bool BinExport2_Library::has_load_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BinExport2_Library::clear_load_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.load_address_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t BinExport2_Library::load_address() const {
  // @@protoc_insertion_point(field_get:BinExport2.Library.load_address)
  return _internal_load_address();
}
inline void BinExport2_Library::set_load_address(::uint64_t value) {
  _internal_set_load_address(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:BinExport2.Library.load_address)
}
inline ::uint64_t BinExport2_Library::_internal_load_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.load_address_;
}
inline void BinExport2_Library::_internal_set_load_address(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.load_address_ = value;
}

// optional string name = 3;
inline bool BinExport2_Library::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Library::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BinExport2_Library::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.Library.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_Library::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.Library.name)
}
inline std::string* PROTOBUF_NONNULL BinExport2_Library::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:BinExport2.Library.name)
  return _s;
}
inline const std::string& BinExport2_Library::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void BinExport2_Library::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_Library::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_Library::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.Library.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_Library::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.Library.name)
}

// -------------------------------------------------------------------

// BinExport2_Module

// optional string name = 1;
inline bool BinExport2_Module::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BinExport2_Module::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BinExport2_Module::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.Module.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BinExport2_Module::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinExport2.Module.name)
}
inline std::string* PROTOBUF_NONNULL BinExport2_Module::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:BinExport2.Module.name)
  return _s;
}
inline const std::string& BinExport2_Module::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void BinExport2_Module::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BinExport2_Module::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BinExport2_Module::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.Module.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void BinExport2_Module::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BinExport2.Module.name)
}

// -------------------------------------------------------------------

// BinExport2

// optional .BinExport2.Meta meta_information = 1;
inline bool BinExport2::has_meta_information() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meta_information_ != nullptr);
  return value;
}
inline void BinExport2::clear_meta_information() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_information_ != nullptr) _impl_.meta_information_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::BinExport2_Meta& BinExport2::_internal_meta_information() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::BinExport2_Meta* p = _impl_.meta_information_;
  return p != nullptr ? *p : reinterpret_cast<const ::BinExport2_Meta&>(::_BinExport2_Meta_default_instance_);
}
inline const ::BinExport2_Meta& BinExport2::meta_information() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.meta_information)
  return _internal_meta_information();
}
inline void BinExport2::unsafe_arena_set_allocated_meta_information(
    ::BinExport2_Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_information_);
  }
  _impl_.meta_information_ = reinterpret_cast<::BinExport2_Meta*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:BinExport2.meta_information)
}
inline ::BinExport2_Meta* PROTOBUF_NULLABLE BinExport2::release_meta_information() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::BinExport2_Meta* released = _impl_.meta_information_;
  _impl_.meta_information_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::BinExport2_Meta* PROTOBUF_NULLABLE BinExport2::unsafe_arena_release_meta_information() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.meta_information)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::BinExport2_Meta* temp = _impl_.meta_information_;
  _impl_.meta_information_ = nullptr;
  return temp;
}
inline ::BinExport2_Meta* PROTOBUF_NONNULL BinExport2::_internal_mutable_meta_information() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_information_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::BinExport2_Meta>(GetArena());
    _impl_.meta_information_ = reinterpret_cast<::BinExport2_Meta*>(p);
  }
  return _impl_.meta_information_;
}
inline ::BinExport2_Meta* PROTOBUF_NONNULL BinExport2::mutable_meta_information()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::BinExport2_Meta* _msg = _internal_mutable_meta_information();
  // @@protoc_insertion_point(field_mutable:BinExport2.meta_information)
  return _msg;
}
inline void BinExport2::set_allocated_meta_information(::BinExport2_Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_information_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.meta_information_ = reinterpret_cast<::BinExport2_Meta*>(value);
  // @@protoc_insertion_point(field_set_allocated:BinExport2.meta_information)
}

// repeated .BinExport2.Expression expression = 2;
inline int BinExport2::_internal_expression_size() const {
  return _internal_expression().size();
}
inline int BinExport2::expression_size() const {
  return _internal_expression_size();
}
inline void BinExport2::clear_expression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expression_.Clear();
}
inline ::BinExport2_Expression* PROTOBUF_NONNULL BinExport2::mutable_expression(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.expression)
  return _internal_mutable_expression()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Expression>* PROTOBUF_NONNULL BinExport2::mutable_expression()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.expression)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_expression();
}
inline const ::BinExport2_Expression& BinExport2::expression(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.expression)
  return _internal_expression().Get(index);
}
inline ::BinExport2_Expression* PROTOBUF_NONNULL BinExport2::add_expression()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Expression* _add = _internal_mutable_expression()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.expression)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Expression>& BinExport2::expression() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.expression)
  return _internal_expression();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Expression>&
BinExport2::_internal_expression() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expression_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Expression>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_expression() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.expression_;
}

// repeated .BinExport2.Operand operand = 3;
inline int BinExport2::_internal_operand_size() const {
  return _internal_operand().size();
}
inline int BinExport2::operand_size() const {
  return _internal_operand_size();
}
inline void BinExport2::clear_operand() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operand_.Clear();
}
inline ::BinExport2_Operand* PROTOBUF_NONNULL BinExport2::mutable_operand(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.operand)
  return _internal_mutable_operand()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Operand>* PROTOBUF_NONNULL BinExport2::mutable_operand()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.operand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_operand();
}
inline const ::BinExport2_Operand& BinExport2::operand(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.operand)
  return _internal_operand().Get(index);
}
inline ::BinExport2_Operand* PROTOBUF_NONNULL BinExport2::add_operand()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Operand* _add = _internal_mutable_operand()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.operand)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Operand>& BinExport2::operand() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.operand)
  return _internal_operand();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Operand>&
BinExport2::_internal_operand() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.operand_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Operand>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_operand() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.operand_;
}

// repeated .BinExport2.Mnemonic mnemonic = 4;
inline int BinExport2::_internal_mnemonic_size() const {
  return _internal_mnemonic().size();
}
inline int BinExport2::mnemonic_size() const {
  return _internal_mnemonic_size();
}
inline void BinExport2::clear_mnemonic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnemonic_.Clear();
}
inline ::BinExport2_Mnemonic* PROTOBUF_NONNULL BinExport2::mutable_mnemonic(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.mnemonic)
  return _internal_mutable_mnemonic()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Mnemonic>* PROTOBUF_NONNULL BinExport2::mutable_mnemonic()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.mnemonic)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_mnemonic();
}
inline const ::BinExport2_Mnemonic& BinExport2::mnemonic(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.mnemonic)
  return _internal_mnemonic().Get(index);
}
inline ::BinExport2_Mnemonic* PROTOBUF_NONNULL BinExport2::add_mnemonic()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Mnemonic* _add = _internal_mutable_mnemonic()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.mnemonic)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Mnemonic>& BinExport2::mnemonic() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.mnemonic)
  return _internal_mnemonic();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Mnemonic>&
BinExport2::_internal_mnemonic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mnemonic_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Mnemonic>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_mnemonic() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.mnemonic_;
}

// repeated .BinExport2.Instruction instruction = 5;
inline int BinExport2::_internal_instruction_size() const {
  return _internal_instruction().size();
}
inline int BinExport2::instruction_size() const {
  return _internal_instruction_size();
}
inline void BinExport2::clear_instruction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instruction_.Clear();
}
inline ::BinExport2_Instruction* PROTOBUF_NONNULL BinExport2::mutable_instruction(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.instruction)
  return _internal_mutable_instruction()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Instruction>* PROTOBUF_NONNULL BinExport2::mutable_instruction()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.instruction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_instruction();
}
inline const ::BinExport2_Instruction& BinExport2::instruction(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.instruction)
  return _internal_instruction().Get(index);
}
inline ::BinExport2_Instruction* PROTOBUF_NONNULL BinExport2::add_instruction()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Instruction* _add = _internal_mutable_instruction()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.instruction)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Instruction>& BinExport2::instruction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.instruction)
  return _internal_instruction();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Instruction>&
BinExport2::_internal_instruction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instruction_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Instruction>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_instruction() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.instruction_;
}

// repeated .BinExport2.BasicBlock basic_block = 6;
inline int BinExport2::_internal_basic_block_size() const {
  return _internal_basic_block().size();
}
inline int BinExport2::basic_block_size() const {
  return _internal_basic_block_size();
}
inline void BinExport2::clear_basic_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.basic_block_.Clear();
}
inline ::BinExport2_BasicBlock* PROTOBUF_NONNULL BinExport2::mutable_basic_block(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.basic_block)
  return _internal_mutable_basic_block()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock>* PROTOBUF_NONNULL BinExport2::mutable_basic_block()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.basic_block)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_basic_block();
}
inline const ::BinExport2_BasicBlock& BinExport2::basic_block(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.basic_block)
  return _internal_basic_block().Get(index);
}
inline ::BinExport2_BasicBlock* PROTOBUF_NONNULL BinExport2::add_basic_block()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_BasicBlock* _add = _internal_mutable_basic_block()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.basic_block)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock>& BinExport2::basic_block() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.basic_block)
  return _internal_basic_block();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock>&
BinExport2::_internal_basic_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.basic_block_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_BasicBlock>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_basic_block() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.basic_block_;
}

// repeated .BinExport2.FlowGraph flow_graph = 7;
inline int BinExport2::_internal_flow_graph_size() const {
  return _internal_flow_graph().size();
}
inline int BinExport2::flow_graph_size() const {
  return _internal_flow_graph_size();
}
inline void BinExport2::clear_flow_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_graph_.Clear();
}
inline ::BinExport2_FlowGraph* PROTOBUF_NONNULL BinExport2::mutable_flow_graph(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.flow_graph)
  return _internal_mutable_flow_graph()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph>* PROTOBUF_NONNULL BinExport2::mutable_flow_graph()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.flow_graph)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_flow_graph();
}
inline const ::BinExport2_FlowGraph& BinExport2::flow_graph(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.flow_graph)
  return _internal_flow_graph().Get(index);
}
inline ::BinExport2_FlowGraph* PROTOBUF_NONNULL BinExport2::add_flow_graph()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_FlowGraph* _add = _internal_mutable_flow_graph()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.flow_graph)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph>& BinExport2::flow_graph() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.flow_graph)
  return _internal_flow_graph();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph>&
BinExport2::_internal_flow_graph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flow_graph_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_FlowGraph>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_flow_graph() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.flow_graph_;
}

// optional .BinExport2.CallGraph call_graph = 8;
inline bool BinExport2::has_call_graph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.call_graph_ != nullptr);
  return value;
}
inline void BinExport2::clear_call_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.call_graph_ != nullptr) _impl_.call_graph_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::BinExport2_CallGraph& BinExport2::_internal_call_graph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::BinExport2_CallGraph* p = _impl_.call_graph_;
  return p != nullptr ? *p : reinterpret_cast<const ::BinExport2_CallGraph&>(::_BinExport2_CallGraph_default_instance_);
}
inline const ::BinExport2_CallGraph& BinExport2::call_graph() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.call_graph)
  return _internal_call_graph();
}
inline void BinExport2::unsafe_arena_set_allocated_call_graph(
    ::BinExport2_CallGraph* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.call_graph_);
  }
  _impl_.call_graph_ = reinterpret_cast<::BinExport2_CallGraph*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:BinExport2.call_graph)
}
inline ::BinExport2_CallGraph* PROTOBUF_NULLABLE BinExport2::release_call_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::BinExport2_CallGraph* released = _impl_.call_graph_;
  _impl_.call_graph_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::BinExport2_CallGraph* PROTOBUF_NULLABLE BinExport2::unsafe_arena_release_call_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BinExport2.call_graph)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::BinExport2_CallGraph* temp = _impl_.call_graph_;
  _impl_.call_graph_ = nullptr;
  return temp;
}
inline ::BinExport2_CallGraph* PROTOBUF_NONNULL BinExport2::_internal_mutable_call_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.call_graph_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::BinExport2_CallGraph>(GetArena());
    _impl_.call_graph_ = reinterpret_cast<::BinExport2_CallGraph*>(p);
  }
  return _impl_.call_graph_;
}
inline ::BinExport2_CallGraph* PROTOBUF_NONNULL BinExport2::mutable_call_graph()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::BinExport2_CallGraph* _msg = _internal_mutable_call_graph();
  // @@protoc_insertion_point(field_mutable:BinExport2.call_graph)
  return _msg;
}
inline void BinExport2::set_allocated_call_graph(::BinExport2_CallGraph* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.call_graph_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.call_graph_ = reinterpret_cast<::BinExport2_CallGraph*>(value);
  // @@protoc_insertion_point(field_set_allocated:BinExport2.call_graph)
}

// repeated string string_table = 9;
inline int BinExport2::_internal_string_table_size() const {
  return _internal_string_table().size();
}
inline int BinExport2::string_table_size() const {
  return _internal_string_table_size();
}
inline void BinExport2::clear_string_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_table_.Clear();
}
inline std::string* PROTOBUF_NONNULL BinExport2::add_string_table()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_string_table()->Add();
  // @@protoc_insertion_point(field_add_mutable:BinExport2.string_table)
  return _s;
}
inline const std::string& BinExport2::string_table(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.string_table)
  return _internal_string_table().Get(index);
}
inline std::string* PROTOBUF_NONNULL BinExport2::mutable_string_table(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.string_table)
  return _internal_mutable_string_table()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void BinExport2::set_string_table(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_string_table()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:BinExport2.string_table)
}
template <typename Arg_, typename... Args_>
inline void BinExport2::add_string_table(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_string_table(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:BinExport2.string_table)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& BinExport2::string_table() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.string_table)
  return _internal_string_table();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
BinExport2::mutable_string_table() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.string_table)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_string_table();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BinExport2::_internal_string_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_table_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_string_table() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.string_table_;
}

// repeated .BinExport2.Reference address_comment = 10 [deprecated = true];
inline int BinExport2::_internal_address_comment_size() const {
  return _internal_address_comment().size();
}
inline int BinExport2::address_comment_size() const {
  return _internal_address_comment_size();
}
inline void BinExport2::clear_address_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_comment_.Clear();
}
inline ::BinExport2_Reference* PROTOBUF_NONNULL BinExport2::mutable_address_comment(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.address_comment)
  return _internal_mutable_address_comment()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL BinExport2::mutable_address_comment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.address_comment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_address_comment();
}
inline const ::BinExport2_Reference& BinExport2::address_comment(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.address_comment)
  return _internal_address_comment().Get(index);
}
inline ::BinExport2_Reference* PROTOBUF_NONNULL BinExport2::add_address_comment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Reference* _add = _internal_mutable_address_comment()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.address_comment)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& BinExport2::address_comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.address_comment)
  return _internal_address_comment();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>&
BinExport2::_internal_address_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_comment_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_address_comment() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.address_comment_;
}

// repeated .BinExport2.Comment comment = 17;
inline int BinExport2::_internal_comment_size() const {
  return _internal_comment().size();
}
inline int BinExport2::comment_size() const {
  return _internal_comment_size();
}
inline void BinExport2::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Clear();
}
inline ::BinExport2_Comment* PROTOBUF_NONNULL BinExport2::mutable_comment(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.comment)
  return _internal_mutable_comment()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Comment>* PROTOBUF_NONNULL BinExport2::mutable_comment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.comment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_comment();
}
inline const ::BinExport2_Comment& BinExport2::comment(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.comment)
  return _internal_comment().Get(index);
}
inline ::BinExport2_Comment* PROTOBUF_NONNULL BinExport2::add_comment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Comment* _add = _internal_mutable_comment()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.comment)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Comment>& BinExport2::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.comment)
  return _internal_comment();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Comment>&
BinExport2::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Comment>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.comment_;
}

// repeated .BinExport2.Reference string_reference = 11;
inline int BinExport2::_internal_string_reference_size() const {
  return _internal_string_reference().size();
}
inline int BinExport2::string_reference_size() const {
  return _internal_string_reference_size();
}
inline void BinExport2::clear_string_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_reference_.Clear();
}
inline ::BinExport2_Reference* PROTOBUF_NONNULL BinExport2::mutable_string_reference(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.string_reference)
  return _internal_mutable_string_reference()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL BinExport2::mutable_string_reference()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.string_reference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_string_reference();
}
inline const ::BinExport2_Reference& BinExport2::string_reference(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.string_reference)
  return _internal_string_reference().Get(index);
}
inline ::BinExport2_Reference* PROTOBUF_NONNULL BinExport2::add_string_reference()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Reference* _add = _internal_mutable_string_reference()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.string_reference)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& BinExport2::string_reference() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.string_reference)
  return _internal_string_reference();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>&
BinExport2::_internal_string_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_reference_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_string_reference() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.string_reference_;
}

// repeated .BinExport2.Reference expression_substitution = 12;
inline int BinExport2::_internal_expression_substitution_size() const {
  return _internal_expression_substitution().size();
}
inline int BinExport2::expression_substitution_size() const {
  return _internal_expression_substitution_size();
}
inline void BinExport2::clear_expression_substitution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expression_substitution_.Clear();
}
inline ::BinExport2_Reference* PROTOBUF_NONNULL BinExport2::mutable_expression_substitution(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.expression_substitution)
  return _internal_mutable_expression_substitution()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL BinExport2::mutable_expression_substitution()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.expression_substitution)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_expression_substitution();
}
inline const ::BinExport2_Reference& BinExport2::expression_substitution(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.expression_substitution)
  return _internal_expression_substitution().Get(index);
}
inline ::BinExport2_Reference* PROTOBUF_NONNULL BinExport2::add_expression_substitution()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Reference* _add = _internal_mutable_expression_substitution()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.expression_substitution)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>& BinExport2::expression_substitution() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.expression_substitution)
  return _internal_expression_substitution();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>&
BinExport2::_internal_expression_substitution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expression_substitution_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Reference>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_expression_substitution() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.expression_substitution_;
}

// repeated .BinExport2.Section section = 13;
inline int BinExport2::_internal_section_size() const {
  return _internal_section().size();
}
inline int BinExport2::section_size() const {
  return _internal_section_size();
}
inline void BinExport2::clear_section() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.section_.Clear();
}
inline ::BinExport2_Section* PROTOBUF_NONNULL BinExport2::mutable_section(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.section)
  return _internal_mutable_section()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Section>* PROTOBUF_NONNULL BinExport2::mutable_section()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.section)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_section();
}
inline const ::BinExport2_Section& BinExport2::section(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.section)
  return _internal_section().Get(index);
}
inline ::BinExport2_Section* PROTOBUF_NONNULL BinExport2::add_section()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Section* _add = _internal_mutable_section()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.section)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Section>& BinExport2::section() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.section)
  return _internal_section();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Section>&
BinExport2::_internal_section() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.section_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Section>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_section() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.section_;
}

// repeated .BinExport2.Library library = 14;
inline int BinExport2::_internal_library_size() const {
  return _internal_library().size();
}
inline int BinExport2::library_size() const {
  return _internal_library_size();
}
inline void BinExport2::clear_library() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.library_.Clear();
}
inline ::BinExport2_Library* PROTOBUF_NONNULL BinExport2::mutable_library(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.library)
  return _internal_mutable_library()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Library>* PROTOBUF_NONNULL BinExport2::mutable_library()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.library)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_library();
}
inline const ::BinExport2_Library& BinExport2::library(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.library)
  return _internal_library().Get(index);
}
inline ::BinExport2_Library* PROTOBUF_NONNULL BinExport2::add_library()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Library* _add = _internal_mutable_library()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.library)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Library>& BinExport2::library() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.library)
  return _internal_library();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Library>&
BinExport2::_internal_library() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.library_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Library>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_library() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.library_;
}

// repeated .BinExport2.DataReference data_reference = 15;
inline int BinExport2::_internal_data_reference_size() const {
  return _internal_data_reference().size();
}
inline int BinExport2::data_reference_size() const {
  return _internal_data_reference_size();
}
inline void BinExport2::clear_data_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_reference_.Clear();
}
inline ::BinExport2_DataReference* PROTOBUF_NONNULL BinExport2::mutable_data_reference(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.data_reference)
  return _internal_mutable_data_reference()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_DataReference>* PROTOBUF_NONNULL BinExport2::mutable_data_reference()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.data_reference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data_reference();
}
inline const ::BinExport2_DataReference& BinExport2::data_reference(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.data_reference)
  return _internal_data_reference().Get(index);
}
inline ::BinExport2_DataReference* PROTOBUF_NONNULL BinExport2::add_data_reference()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_DataReference* _add = _internal_mutable_data_reference()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.data_reference)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_DataReference>& BinExport2::data_reference() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.data_reference)
  return _internal_data_reference();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_DataReference>&
BinExport2::_internal_data_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_reference_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_DataReference>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_data_reference() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_reference_;
}

// repeated .BinExport2.Module module = 16;
inline int BinExport2::_internal_module_size() const {
  return _internal_module().size();
}
inline int BinExport2::module_size() const {
  return _internal_module_size();
}
inline void BinExport2::clear_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_.Clear();
}
inline ::BinExport2_Module* PROTOBUF_NONNULL BinExport2::mutable_module(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinExport2.module)
  return _internal_mutable_module()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Module>* PROTOBUF_NONNULL BinExport2::mutable_module()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinExport2.module)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_module();
}
inline const ::BinExport2_Module& BinExport2::module(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinExport2.module)
  return _internal_module().Get(index);
}
inline ::BinExport2_Module* PROTOBUF_NONNULL BinExport2::add_module()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BinExport2_Module* _add = _internal_mutable_module()->Add();
  // @@protoc_insertion_point(field_add:BinExport2.module)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Module>& BinExport2::module() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinExport2.module)
  return _internal_module();
}
inline const ::google::protobuf::RepeatedPtrField<::BinExport2_Module>&
BinExport2::_internal_module() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_;
}
inline ::google::protobuf::RepeatedPtrField<::BinExport2_Module>* PROTOBUF_NONNULL
BinExport2::_internal_mutable_module() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.module_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::BinExport2_CallGraph_Vertex_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::BinExport2_CallGraph_Vertex_Type>() {
  return ::BinExport2_CallGraph_Vertex_Type_descriptor();
}
template <>
struct is_proto_enum<::BinExport2_Expression_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::BinExport2_Expression_Type>() {
  return ::BinExport2_Expression_Type_descriptor();
}
template <>
struct is_proto_enum<::BinExport2_FlowGraph_Edge_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::BinExport2_FlowGraph_Edge_Type>() {
  return ::BinExport2_FlowGraph_Edge_Type_descriptor();
}
template <>
struct is_proto_enum<::BinExport2_Comment_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::BinExport2_Comment_Type>() {
  return ::BinExport2_Comment_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // binexport2_2eproto_2epb_2eh
